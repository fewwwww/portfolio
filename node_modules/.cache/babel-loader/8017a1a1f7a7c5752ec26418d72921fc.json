{"remainingRequest":"/Users/msfew/Downloads/portfolio/node_modules/babel-loader/lib/index.js!/Users/msfew/Downloads/portfolio/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/msfew/Downloads/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/msfew/Downloads/portfolio/src/templates/portfolio/commands/Tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/msfew/Downloads/portfolio/src/templates/portfolio/commands/Tree.vue","mtime":1617939276000},{"path":"/Users/msfew/Downloads/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/Downloads/portfolio/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/msfew/Downloads/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/Downloads/portfolio/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL21zZmV3L0Rvd25sb2Fkcy9wb3J0Zm9saW8vbm9kZV9tb2R1bGVzL0B2dWUvYmFiZWwtcHJlc2V0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcEdldHRlcnMsIG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmltcG9ydCBMaW5rIGZyb20gJ0AvY29tcG9uZW50cy9wb3J0Zm9saW8vbGluay9MaW5rJzsKaW1wb3J0IGFyZ3VtZW50ZWQgZnJvbSAnQC9taXhpbnMvYXJndW1lbnRlZCc7Ci8qKgogKiBUaGlzIGNvbW1hbmQgcmVjdXJzaXZlbHkgbGlzdHMgYWxsIGRpcmVjdG9yaWVzIGFuZCB0aGVpciBjb250ZW50cy4KICovCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1RyZWUnLAogIG1peGluczogW2FyZ3VtZW50ZWRdLAogIGNvbXBvbmVudHM6IHsKICAgIExpbms6IExpbmsKICB9LAogIGFyZ1NwZWM6IHsKICAgIGFyZ3M6IFt7CiAgICAgIG5hbWU6ICdkaXJuYW1lJywKICAgICAgdHlwZTogU3RyaW5nLAogICAgICAiZGVmYXVsdCI6ICcuJwogICAgfV0sCiAgICBrd2FyZ3M6IFt7CiAgICAgIG5hbWU6ICctLWZsYXR0ZW4nLAogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBhbGlhc2VzOiBbJy1mJ10KICAgIH1dCiAgfSwKICBwcm9wczogewogICAgLyoqCiAgICAgKiBfdGhlIGFyZ3VtZW50cyBwYXNzZWQgdG8gdGhlIGNvbW1hbmRfCiAgICAgKi8KICAgIGFyZ3Y6IHsKICAgICAgdHlwZTogQXJyYXkKICAgIH0sCgogICAgLyoqCiAgICAgKiBfdGhlIG5vZGUgYmVsb3cgd2hpY2ggdGhlIHRyZWUgaXMgdG8gYmUgcmVuZGVyZWRfCiAgICAgKi8KICAgIHBhc3NlZE5vZGU6IHsKICAgICAgdHlwZTogT2JqZWN0CiAgICB9LAoKICAgIC8qKgogICAgICogX3RoZSBydWxlcyB0byBkcmF3IGxpbmVzIGJlZm9yZSBldmVyeSBlbGVtZW50IG9mIHRoaXMgdHJlZV8KICAgICAqLwogICAgbGluZVJ1bGVzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICAiZGVmYXVsdCI6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7CiAgICBsZXZlbDogZnVuY3Rpb24gbGV2ZWwoKSB7CiAgICAgIHJldHVybiB0aGlzLmxpbmVSdWxlcy5sZW5ndGg7CiAgICB9LAoKICAgIC8qKgogICAgICogX3RoZSBkaXJlY3Rvcnkgd2hvc2UgY29udGVudHMgYXJlIHRvIGJlIHNob3duXwogICAgICovCiAgICBkaXI6IGZ1bmN0aW9uIGRpcigpIHsKICAgICAgaWYgKHRoaXMucGFzc2VkTm9kZSkgewogICAgICAgIHJldHVybiB0aGlzLnBhc3NlZE5vZGU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHRoaXMubm9kZUxvY2F0ZWRBdCh0aGlzLmFyZ3MuZGlybmFtZS5yZXBsYWNlKC9cLyQvLCAnJykpOwogICAgICB9CiAgICB9LAoKICAgIC8qKgogICAgICogX3doZXRoZXIgYSBub2RlIG1hdGNoaW5nIHRoZSBwYXRoIHdhcyBmb3VuZF8KICAgICAqLwogICAgaXNGb3VuZDogZnVuY3Rpb24gaXNGb3VuZCgpIHsKICAgICAgcmV0dXJuIHRoaXMubm9kZTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBfd2hldGhlciB0aGlzIG5vZGUgaXMgdGhlIGxhc3QgY2hpbGQgb2YgaXRzIHBhcmVudF8KICAgICAqLwogICAgaXNMYXN0Q2hpbGQ6IGZ1bmN0aW9uIGlzTGFzdENoaWxkKCkgewogICAgICBpZiAodGhpcy5sZXZlbCA9PT0gMCkgewogICAgICAgIC8vIFJvb3Qgbm9kZQogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9IGVsc2UgewogICAgICAgIHZhciBzaWJsaW5ncyA9IHRoaXMubm9kZS5wYXJlbnQuY2hpbGRyZW47CiAgICAgICAgcmV0dXJuIHNpYmxpbmdzLmluZGV4T2YodGhpcy5ub2RlKSA9PT0gc2libGluZ3MubGVuZ3RoIC0gMTsKICAgICAgfQogICAgfQogIH0sIG1hcFN0YXRlKCdwb3J0Zm9saW8nLCBbJ2N1cnJlbnROb2RlJ10pKSwgbWFwR2V0dGVycygncG9ydGZvbGlvJywgWydub2RlTG9jYXRlZEF0J10pKSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5ub2RlID0gdGhpcy5kaXI7CiAgfQp9Ow=="},{"version":3,"sources":["Tree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,SAAA,UAAA,EAAA,QAAA,QAAA,MAAA;AAEA,OAAA,IAAA,MAAA,kCAAA;AAEA,OAAA,UAAA,MAAA,qBAAA;AAEA;;;;AAGA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,MAAA,EAAA,CACA,UADA,CAFA;AAKA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA;AADA,GALA;AAQA,EAAA,OAAA,EAAA;AACA,IAAA,IAAA,EAAA,CACA;AACA,MAAA,IAAA,EAAA,SADA;AAEA,MAAA,IAAA,EAAA,MAFA;AAGA,iBAAA;AAHA,KADA,CADA;AAQA,IAAA,MAAA,EAAA,CACA;AACA,MAAA,IAAA,EAAA,WADA;AAEA,MAAA,IAAA,EAAA,OAFA;AAGA,MAAA,OAAA,EAAA,CACA,IADA;AAHA,KADA;AARA,GARA;AA0BA,EAAA,KAAA,EAAA;AACA;;;AAGA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAJA;;AAOA;;;AAGA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAVA;;AAaA;;;AAGA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,iBAAA;AAAA,eAAA,EAAA;AAAA;AAFA;AAhBA,GA1BA;AA+CA,EAAA,QAAA;AACA,IAAA,KADA,mBACA;AACA,aAAA,KAAA,SAAA,CAAA,MAAA;AACA,KAHA;;AAIA;;;AAGA,IAAA,GAPA,iBAOA;AACA,UAAA,KAAA,UAAA,EAAA;AACA,eAAA,KAAA,UAAA;AACA,OAFA,MAEA;AACA,eAAA,KAAA,aAAA,CAAA,KAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA,KAAA,EAAA,EAAA,CAAA,CAAA;AACA;AACA,KAbA;;AAcA;;;AAGA,IAAA,OAjBA,qBAiBA;AACA,aAAA,KAAA,IAAA;AACA,KAnBA;;AAoBA;;;AAGA,IAAA,WAvBA,yBAuBA;AACA,UAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA;AACA,eAAA,IAAA;AACA,OAFA,MAEA;AACA,YAAA,QAAA,GAAA,KAAA,IAAA,CAAA,MAAA,CAAA,QAAA;AACA,eAAA,QAAA,CAAA,OAAA,CAAA,KAAA,IAAA,MAAA,QAAA,CAAA,MAAA,GAAA,CAAA;AACA;AACA;AA9BA,KAgCA,QAAA,CAAA,WAAA,EAAA,CACA,aADA,CAAA,CAhCA,GAmCA,UAAA,CAAA,WAAA,EAAA,CACA,eADA,CAAA,CAnCA,CA/CA;AAsFA,EAAA,OAtFA,qBAsFA;AACA,SAAA,IAAA,GAAA,KAAA,GAAA;AACA;AAxFA,CAAA","sourcesContent":["<template>\n  <div class=\"tree\">\n    <template v-if=\"isFound\">\n      <template v-if=\"!args.flatten\">\n        <span\n          :class=\"rule ? 'extra-space' : 'space'\"\n          v-for=\"(rule, index) in lineRules\"\n          :key=\"index\">{{ rule ? '': '│'}}</span>{{ isLastChild ? '└' : '├'}}──&nbsp;\n      </template>\n\n      <template v-if=\"!(args.flatten && node.isFolder())\">\n        <template v-if=\"args.flatten\">─&nbsp;</template>\n        <Link :node=\"node\"/>\n      </template>\n\n      <tree\n        v-for=\"child in node.children\"\n        :argv=\"argv\"\n        :passed-node=\"child\"\n        :line-rules=\"[...lineRules, isLastChild]\"\n        :key=\"child.name\"/>\n    </template>\n    <template v-else>\n      <strong>{{ args.dirname }}</strong> is not a valid directory.\n    </template>\n  </div>\n</template>\n\n<script>\n  import { mapGetters, mapState } from 'vuex'\n\n  import Link from '@/components/portfolio/link/Link'\n\n  import argumented from '@/mixins/argumented'\n\n  /**\n   * This command recursively lists all directories and their contents.\n   */\n  export default {\n    name: 'Tree',\n    mixins: [\n      argumented\n    ],\n    components: {\n      Link\n    },\n    argSpec: {\n      args: [\n        {\n          name: 'dirname',\n          type: String,\n          default: '.'\n        }\n      ],\n      kwargs: [\n        {\n          name: '--flatten',\n          type: Boolean,\n          aliases: [\n            '-f'\n          ]\n        }\n      ]\n    },\n    props: {\n      /**\n       * _the arguments passed to the command_\n       */\n      argv: {\n        type: Array\n      },\n      /**\n       * _the node below which the tree is to be rendered_\n       */\n      passedNode: {\n        type: Object\n      },\n      /**\n       * _the rules to draw lines before every element of this tree_\n       */\n      lineRules: {\n        type: Array,\n        default: () => []\n      }\n    },\n    computed: {\n      level () {\n        return this.lineRules.length\n      },\n      /**\n       * _the directory whose contents are to be shown_\n       */\n      dir () {\n        if (this.passedNode) {\n          return this.passedNode\n        } else {\n          return this.nodeLocatedAt(this.args.dirname.replace(/\\/$/, ''))\n        }\n      },\n      /**\n       * _whether a node matching the path was found_\n       */\n      isFound () {\n        return this.node\n      },\n      /**\n       * _whether this node is the last child of its parent_\n       */\n      isLastChild () {\n        if (this.level === 0) { // Root node\n          return true\n        } else {\n          const siblings = this.node.parent.children\n          return siblings.indexOf(this.node) === siblings.length - 1\n        }\n      },\n\n      ...mapState('portfolio', [\n        'currentNode'\n      ]),\n      ...mapGetters('portfolio', [\n        'nodeLocatedAt'\n      ])\n    },\n    created () {\n      this.node = this.dir\n    }\n  }\n</script>\n\n<style scoped lang=\"scss\">\n  .tree {\n    .space {\n      margin-right: 3ch;\n    }\n\n    .extra-space {\n      margin-right: 4ch;\n    }\n  }\n</style>\n"],"sourceRoot":"src/templates/portfolio/commands"}]}