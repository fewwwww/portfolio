{"remainingRequest":"/Users/msfew/portfolio/node_modules/thread-loader/dist/cjs.js!/Users/msfew/portfolio/node_modules/babel-loader/lib/index.js!/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/msfew/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/msfew/portfolio/src/templates/home/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/msfew/portfolio/src/templates/home/Home.vue","mtime":1615364334479},{"path":"/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEdyaWQgZnJvbSAnQC9jb21wb25lbnRzL2xheW91dC9ncmlkL0dyaWQnOwppbXBvcnQgU3Bpbm5lciBmcm9tICdAL2NvbXBvbmVudHMvY29tbW9uL3NwaW5uZXIvU3Bpbm5lcic7CmltcG9ydCBLYW9tb2ppIGZyb20gJ0AvY29tcG9uZW50cy9ob21lL2thb21vamkvS2FvbW9qaSc7CmltcG9ydCBNZW1vamkgZnJvbSAnQC9jb21wb25lbnRzL2hvbWUvbWVtb2ppL01lbW9qaSc7CmltcG9ydCBSb2xlIGZyb20gJ0AvY29tcG9uZW50cy9ob21lL3JvbGUvUm9sZSc7CmltcG9ydCBTY3JvbGwgZnJvbSAnQC9jb21wb25lbnRzL2hvbWUvc2Nyb2xsL1Njcm9sbCc7CmltcG9ydCBTaXRlVGl0bGUgZnJvbSAnQC9jb21wb25lbnRzL2hvbWUvc2l0ZV90aXRsZS9TaXRlVGl0bGUnOwppbXBvcnQgU291cmNlIGZyb20gJ0AvY29tcG9uZW50cy9ob21lL3NvdXJjZS9Tb3VyY2UnOwppbXBvcnQgV29yayBmcm9tICdAL2NvbXBvbmVudHMvaG9tZS93b3JrL1dvcmsnOwppbXBvcnQgZGVzY3JpcHRpb25zIGZyb20gJ0AvZGF0YS9kZXNjcmlwdGlvbnMuanNvbic7Ci8qKgogKiBUaGlzIHBhZ2UgaXMgdGhlIGxhbmRpbmcgcGFnZSBmb3IgdGhlIHBvcnRmb2xpby4gQWxsIGltcHJvdmVtZW50cyBzdGFydAogKiBoZXJlLCBhbmQgaXQgaXMgcG9zc2libGUgdGhhdCB0aGV5IG1pZ2h0IG5vdCBwcm9wYWdhdGUgdG8gdGhlIG90aGVyIHBhZ2VzLgogKi8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSG9tZScsCiAgY29tcG9uZW50czogewogICAgR3JpZDogR3JpZCwKICAgIFNwaW5uZXI6IFNwaW5uZXIsCiAgICBLYW9tb2ppOiBLYW9tb2ppLAogICAgTWVtb2ppOiBNZW1vamksCiAgICBSb2xlOiBSb2xlLAogICAgU2Nyb2xsOiBTY3JvbGwsCiAgICBTaXRlVGl0bGU6IFNpdGVUaXRsZSwKICAgIFNvdXJjZTogU291cmNlLAogICAgV29yazogV29yawogIH0sCiAgbWV0YUluZm86IHsKICAgIHRpdGxlOiAnd2ViIGRldiAmIG1vcmUuLi4nLAogICAgbWV0YTogWydkZXNjcmlwdGlvbicsICdvZzpkZXNjcmlwdGlvbiddLm1hcChmdW5jdGlvbiAobmFtZSkgewogICAgICByZXR1cm4gewogICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgY29udGVudDogZGVzY3JpcHRpb25zLmhvbWUKICAgICAgfTsKICAgIH0pCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaW5kZXg6IDAsCiAgICAgIGludGVydmFsOiA4LAogICAgICAvLyBzZWNvbmRzCiAgICAgIHVwZGF0ZUxvb3BlcjogbnVsbCwKICAgICAgaXNQb3J0Zm9saW9MaW5rRm9jdXNlZDogZmFsc2UsCiAgICAgIHRvdGFsSW1hZ2VDb3VudDogdGhpcy4kcm9sZXMubGVuZ3RoLAogICAgICBsb2FkZWRJbWFnZUNvdW50OiAwLAogICAgICB0cmFuc2l0aW9uU3VmZml4OiAnJwogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICAvKioKICAgICAqIEdldCB3aGV0aGVyIGFsbCBpbWFnZXMgcmVxdWlyZWQgYnkgdGhlIG1lbW9qaSB0aWNrZXIgaGF2ZSBiZWVuCiAgICAgKiBmZXRjaGVkIGFuZCBjYWNoZWQgZm9yIGZhc3RlciByZW5kZXJpbmcuCiAgICAgKgogICAgICogQHJldHVybnMge2Jvb2xlYW59IHdoZXRoZXIgYWxsIGltYWdlcyBoYXZlIGJlZW4gbG9hZGVkCiAgICAgKi8KICAgIGFyZUltYWdlc0xvYWRlZDogZnVuY3Rpb24gYXJlSW1hZ2VzTG9hZGVkKCkgewogICAgICByZXR1cm4gdGhpcy5sb2FkZWRJbWFnZUNvdW50ID49IHRoaXMudG90YWxJbWFnZUNvdW50OwogICAgfSwKCiAgICAvKioKICAgICAqIEdldCB0aGUgbmFtZSBvZiB0aGUgdHJhbnNpdGlvbiB0byBhcHBseSBvbiB0aGUgaG9yaXpvbnRhbCB0aWNrZXJzLgogICAgICogQHJldHVybiB7c3RyaW5nfSB0aGUgbmFtZSBvZiB0aGUgaG9yaXpvbnRhbCB0aWNrZXIgdHJhbnNpdGlvbgogICAgICovCiAgICBob3Jpem9udGFsVHJhbnNpdGlvbk5hbWU6IGZ1bmN0aW9uIGhvcml6b250YWxUcmFuc2l0aW9uTmFtZSgpIHsKICAgICAgcmV0dXJuICJmbGlwLWhvcml6b250YWwiLmNvbmNhdCh0aGlzLnRyYW5zaXRpb25TdWZmaXgpOwogICAgfSwKCiAgICAvKioKICAgICAqIEdldCB0aGUgbmFtZSBvZiB0aGUgdHJhbnNpdGlvbiB0byBhcHBseSBvbiB0aGUgdmVydGljYWwgdGlja2Vycy4KICAgICAqIEByZXR1cm4ge3N0cmluZ30gdGhlIG5hbWUgb2YgdGhlIHZlcnRpY2FsIHRpY2tlciB0cmFuc2l0aW9uCiAgICAgKi8KICAgIHZlcnRpY2FsVHJhbnNpdGlvbk5hbWU6IGZ1bmN0aW9uIHZlcnRpY2FsVHJhbnNpdGlvbk5hbWUoKSB7CiAgICAgIHJldHVybiAiZmxpcC12ZXJ0aWNhbCIuY29uY2F0KHRoaXMudHJhbnNpdGlvblN1ZmZpeCk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgLyoqCiAgICAgKiBEZXRlcm1pbmUgdGhlIHRyYW5zaXRpb24gbmFtZSBiYXNlZCBvbiB3aGV0aGVyIHRoZSBhbmltYXRpb24gaXMgZ29pbmcKICAgICAqIGluIHRoZSBmb3J3YXJkIG9yIGJhY2t3YXJkIGRpcmVjdGlvbi4KICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0byAtIHRoZSBuZXcgdmFsdWUgb2YgdGhlIGluZGV4CiAgICAgKiBAcGFyYW0ge3N0cmluZ30gZnJvbSAtIHRoZSBvbGQgdmFsdWUgb2YgdGhlIGluZGV4CiAgICAgKi8KICAgIGluZGV4OiBmdW5jdGlvbiBpbmRleCh0bywgZnJvbSkgewogICAgICBpZiAodG8gPiBmcm9tKSB7CiAgICAgICAgLy8gQW5pbWF0aW9uIGlzIG1vdmluZyBmb3J3YXJkCiAgICAgICAgdGhpcy50cmFuc2l0aW9uU3VmZml4ID0gJyc7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8gQW5pbWF0aW9uIGlzIG1vdmluZyBiYWNrd2FyZAogICAgICAgIHRoaXMudHJhbnNpdGlvblN1ZmZpeCA9ICctcmV2JzsKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLyoqCiAgICAgKiBTdGFydCB0aGUgbG9vcCB0aGF0IGNoYW5nZXMgbWVtb2ppIGFuZCByb2xlIHBlcmlvZGljYWxseS4KICAgICAqLwogICAgc3RhcnRMb29waW5nOiBmdW5jdGlvbiBzdGFydExvb3BpbmcoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLnN0b3BMb29waW5nKCk7CiAgICAgIHRoaXMudXBkYXRlTG9vcGVyID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLmluZGV4Kys7CiAgICAgIH0sIHRoaXMuaW50ZXJ2YWwgKiAxMDAwKTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBTdG9wIHRoZSBsb29wIHRoYXQgY2hhbmdlcyBtZW1vamkgYW5kIHJvbGUgcGVyaW9kaWNhbGx5LgogICAgICovCiAgICBzdG9wTG9vcGluZzogZnVuY3Rpb24gc3RvcExvb3BpbmcoKSB7CiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy51cGRhdGVMb29wZXIpOwogICAgfSwKCiAgICAvKioKICAgICAqIENoYW5nZSB0aGUgaW5kZXggYmFzZWQgb24gd2hpY2ggc2Nyb2xsaW5nIGJ1dHRvbiB3YXMgY2xpY2tlZC4KICAgICAqIEBwYXJhbSB7bnVtYmVyfSBkZWx0YSAtIHRoZSB2YWx1ZSBieSB3aGljaCB0byBjaGFuZ2UgdGhlIHRpY2tlcnMKICAgICAqLwogICAgc2Nyb2xsVGlja2VyczogZnVuY3Rpb24gc2Nyb2xsVGlja2VycyhkZWx0YSkgewogICAgICB0aGlzLnN0b3BMb29waW5nKCk7CiAgICAgIHRoaXMuaW5kZXggKz0gZGVsdGE7CiAgICAgIHRoaXMuc3RhcnRMb29waW5nKCk7CiAgICB9LAoKICAgIC8qKgogICAgICogU2V0IHRoZSBtZW1vamksIHJvbGUgYW5kIHdvcmsgdGlja2VycyB0byB0aGVpciBmb2N1c2VkIHN0YXRlcyBhbmQgc3RvcAogICAgICogdGhlIHRpY2tpbmcgYW5pbWF0aW9uLgogICAgICovCiAgICBmb2N1c1BvcnRmb2xpb0xpbms6IGZ1bmN0aW9uIGZvY3VzUG9ydGZvbGlvTGluaygpIHsKICAgICAgdGhpcy5zdG9wTG9vcGluZygpOwogICAgICB0aGlzLmlzUG9ydGZvbGlvTGlua0ZvY3VzZWQgPSB0cnVlOwogICAgfSwKCiAgICAvKioKICAgICAqIFNldCB0aGUgbWVtb2ppLCByb2xlIGFuZCB3b3JrIHRpY2tlcnMgdG8gdGhlaXIgYmx1cnJlZCBzdGF0ZXMgYW5kIHN0YXJ0CiAgICAgKiB0aGUgdGlja2luZyBhbmltYXRpb24uCiAgICAgKi8KICAgIGJsdXJQb3J0Zm9saW9MaW5rOiBmdW5jdGlvbiBibHVyUG9ydGZvbGlvTGluaygpIHsKICAgICAgdGhpcy5pc1BvcnRmb2xpb0xpbmtGb2N1c2VkID0gZmFsc2U7CiAgICAgIHRoaXMuc3RhcnRMb29waW5nKCk7CiAgICB9LAoKICAgIC8qKgogICAgICogTG9hZCBtZW1vamkgZm9yIGFsbCByb2xlcyBieSBzb3VyY2luZyB0aGVtIGludG8gYW4gaW52aXNpYmxlIEltYWdlCiAgICAgKiBlbGVtZW50LgogICAgICovCiAgICBwcmVsb2FkSW1hZ2VzOiBmdW5jdGlvbiBwcmVsb2FkSW1hZ2VzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuJHJvbGVzLmZvckVhY2goZnVuY3Rpb24gKHJvbGUpIHsKICAgICAgICB2YXIgaW1hZ2UgPSBuZXcgSW1hZ2UoKTsKICAgICAgICBpbWFnZS5zcmMgPSByZXF1aXJlKCJAL2Fzc2V0cy9tZW1vamkvIi5jb25jYXQocm9sZSwgIi5wbmciKSk7CgogICAgICAgIGltYWdlLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF90aGlzMi5sb2FkZWRJbWFnZUNvdW50Kys7CiAgICAgICAgfTsKICAgICAgfSk7CiAgICB9LAogICAgaGFuZGxlQWZ0ZXJFbnRlcjogZnVuY3Rpb24gaGFuZGxlQWZ0ZXJFbnRlcigpIHsKICAgICAgaWYgKHRoaXMuYXJlSW1hZ2VzTG9hZGVkKSB7CiAgICAgICAgdGhpcy5zdGFydExvb3BpbmcoKTsKICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMucHJlbG9hZEltYWdlcygpOwogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHsKICAgIHRoaXMuc3RvcExvb3BpbmcoKTsKICB9Cn07"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <main id=\"home\">\n    <transition\n      name=\"fade\"\n      mode=\"out-in\"\n      appear\n      @after-enter=\"handleAfterEnter\">\n      <section\n        v-if=\"areImagesLoaded\"\n        key=\"loaded\">\n        <Grid class=\"home-grid\">\n          <div class=\"left\">\n            <div class=\"content\">\n              <RouterLink\n                class=\"memoji-link\"\n                tabindex=\"-1\"\n                :to=\"{name: 'portfolio'}\"\n                @mouseenter.native=\"focusPortfolioLink\"\n                @mouseleave.native=\"blurPortfolioLink\">\n                <transition\n                  :name=\"horizontalTransitionName\"\n                  mode=\"out-in\"\n                  appear>\n                  <Memoji\n                    :key=\"index\"\n                    :index=\"index\"\n                    :color=\"solarizedColor(index)\"\n                    :is-focused=\"isPortfolioLinkFocused\"/>\n                </transition>\n              </RouterLink>\n            </div>\n          </div>\n\n          <div class=\"right\">\n            <div class=\"content\">\n              Hello there! I am\n              <SiteTitle/>\n              and so nice to meet u.\n\n              <p class=\"roles\">\n                I am\n                <RouterLink\n                  class=\"role-link\"\n                  tabindex=\"0\"\n                  :to=\"{name: 'portfolio'}\"\n                  title=\"See my portfolio.\"\n                  @mouseenter.native=\"focusPortfolioLink\"\n                  @mouseleave.native=\"blurPortfolioLink\"\n                  @focus.native=\"focusPortfolioLink\"\n                  @blur.native=\"blurPortfolioLink\">\n                  <transition\n                    :name=\"verticalTransitionName\"\n                    mode=\"out-in\"\n                    appear>\n                    <Role\n                      :key=\"index\"\n                      :index=\"index\"\n                      :color=\"solarizedColor(index)\"\n                      :is-focused=\"isPortfolioLinkFocused\"/>\n                  </transition>\n                </RouterLink>\n              </p>\n\n              <p>\n                With utmost meticulousness and love for the craft,\n                <br/>\n                I\n                <transition\n                  :name=\"verticalTransitionName\"\n                  mode=\"out-in\"\n                  appear>\n                  <Work\n                    :key=\"index\"\n                    :index=\"index\"\n                    :is-focused=\"isPortfolioLinkFocused\"/>\n                </transition>\n                <br/>\n                <span\n                  class=\"secondary-colored\"\n                  title=\"Such as movies, music and memes!\">\n                  and also enjoy other things.\n                </span>\n              </p>\n            </div>\n          </div>\n\n          <Scroll\n            v-for=\"direction in ['previous', 'next']\"\n            :key=\"direction\"\n            class=\"scroll\"\n            :class=\"direction\"\n            :direction=\"direction\"\n            :color=\"solarizedColor(index)\"\n            @scroll=\"scrollTickers\"/>\n        </Grid>\n      </section>\n\n      <section\n        v-else\n        key=\"loading\"\n        class=\"centered\">\n        <Spinner color=\"red\"/>\n      </section>\n    </transition>\n\n    <footer v-show=\"areImagesLoaded\">\n      <Source color=\"cyan\"/>\n      <Kaomoji/>\n    </footer>\n  </main>\n</template>\n\n<script>\n  import Grid from '@/components/layout/grid/Grid'\n\n  import Spinner from '@/components/common/spinner/Spinner'\n\n  import Kaomoji from '@/components/home/kaomoji/Kaomoji'\n  import Memoji from '@/components/home/memoji/Memoji'\n  import Role from '@/components/home/role/Role'\n  import Scroll from '@/components/home/scroll/Scroll'\n  import SiteTitle from '@/components/home/site_title/SiteTitle'\n  import Source from '@/components/home/source/Source'\n  import Work from '@/components/home/work/Work'\n  import descriptions from '@/data/descriptions.json'\n\n  /**\n   * This page is the landing page for the portfolio. All improvements start\n   * here, and it is possible that they might not propagate to the other pages.\n   */\n  export default {\n    name: 'Home',\n    components: {\n      Grid,\n\n      Spinner,\n\n      Kaomoji,\n      Memoji,\n      Role,\n      Scroll,\n      SiteTitle,\n      Source,\n      Work\n    },\n    metaInfo: {\n      title: 'web dev & more...',\n      meta: ['description', 'og:description'].map(name => ({\n        name,\n        content: descriptions.home\n      }))\n    },\n    data () {\n      return {\n        index: 0,\n        interval: 8, // seconds\n        updateLooper: null,\n        isPortfolioLinkFocused: false,\n\n        totalImageCount: this.$roles.length,\n        loadedImageCount: 0,\n\n        transitionSuffix: ''\n      }\n    },\n    computed: {\n      /**\n       * Get whether all images required by the memoji ticker have been\n       * fetched and cached for faster rendering.\n       *\n       * @returns {boolean} whether all images have been loaded\n       */\n      areImagesLoaded () {\n        return this.loadedImageCount >= this.totalImageCount\n      },\n\n      /**\n       * Get the name of the transition to apply on the horizontal tickers.\n       * @return {string} the name of the horizontal ticker transition\n       */\n      horizontalTransitionName () {\n        return `flip-horizontal${this.transitionSuffix}`\n      },\n      /**\n       * Get the name of the transition to apply on the vertical tickers.\n       * @return {string} the name of the vertical ticker transition\n       */\n      verticalTransitionName () {\n        return `flip-vertical${this.transitionSuffix}`\n      }\n    },\n    watch: {\n      /**\n       * Determine the transition name based on whether the animation is going\n       * in the forward or backward direction.\n       * @param {string} to - the new value of the index\n       * @param {string} from - the old value of the index\n       */\n      index (to, from) {\n        if (to > from) { // Animation is moving forward\n          this.transitionSuffix = ''\n        } else { // Animation is moving backward\n          this.transitionSuffix = '-rev'\n        }\n      }\n    },\n    methods: {\n      /**\n       * Start the loop that changes memoji and role periodically.\n       */\n      startLooping () {\n        this.stopLooping()\n        this.updateLooper = setInterval(() => {\n          this.index++\n        }, this.interval * 1000)\n      },\n      /**\n       * Stop the loop that changes memoji and role periodically.\n       */\n      stopLooping () {\n        clearInterval(this.updateLooper)\n      },\n      /**\n       * Change the index based on which scrolling button was clicked.\n       * @param {number} delta - the value by which to change the tickers\n       */\n      scrollTickers (delta) {\n        this.stopLooping()\n        this.index += delta\n        this.startLooping()\n      },\n\n      /**\n       * Set the memoji, role and work tickers to their focused states and stop\n       * the ticking animation.\n       */\n      focusPortfolioLink () {\n        this.stopLooping()\n        this.isPortfolioLinkFocused = true\n      },\n      /**\n       * Set the memoji, role and work tickers to their blurred states and start\n       * the ticking animation.\n       */\n      blurPortfolioLink () {\n        this.isPortfolioLinkFocused = false\n        this.startLooping()\n      },\n\n      /**\n       * Load memoji for all roles by sourcing them into an invisible Image\n       * element.\n       */\n      preloadImages () {\n        this.$roles.forEach((role) => {\n          const image = new Image()\n          image.src = require(`@/assets/memoji/${role}.png`)\n\n          image.onload = () => {\n            this.loadedImageCount++\n          }\n        })\n      },\n\n      handleAfterEnter () {\n        if (this.areImagesLoaded) {\n          this.startLooping()\n        }\n      }\n    },\n    mounted () {\n      this.preloadImages()\n    },\n    beforeDestroy () {\n      this.stopLooping()\n    }\n  }\n</script>\n\n<style scoped lang=\"scss\" src=\"./Home.scss\"/>\n"],"sourceRoot":"src/templates/home"}]}