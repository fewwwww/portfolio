{"remainingRequest":"/Users/msfew/Downloads/portfolio/node_modules/babel-loader/lib/index.js!/Users/msfew/Downloads/portfolio/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/msfew/Downloads/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/msfew/Downloads/portfolio/src/templates/about/partials/personal/Personal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/msfew/Downloads/portfolio/src/templates/about/partials/personal/Personal.vue","mtime":1617939276000},{"path":"/Users/msfew/Downloads/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/Downloads/portfolio/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/msfew/Downloads/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/Downloads/portfolio/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgcGF0aCBhcyBmZWRvcmEgfSBmcm9tICdzaW1wbGUtaWNvbnMvaWNvbnMvZmVkb3JhJzsKaW1wb3J0IHsgcGF0aCBhcyBzYWZhcmkgfSBmcm9tICdzaW1wbGUtaWNvbnMvaWNvbnMvc2FmYXJpJzsKaW1wb3J0IHsgcGF0aCBhcyBhcHBsZSB9IGZyb20gJ3NpbXBsZS1pY29ucy9pY29ucy9hcHBsZSc7CmltcG9ydCBDYXJkIGZyb20gJ0AvY29tcG9uZW50cy9sYXlvdXQvY2FyZC9DYXJkJzsKaW1wb3J0IEdyaWQgZnJvbSAnQC9jb21wb25lbnRzL2xheW91dC9ncmlkL0dyaWQnOwppbXBvcnQgSWNvbiBmcm9tICdAL2NvbXBvbmVudHMvY29tbW9uL2ljb24vSWNvbic7CmltcG9ydCBSZXByIGZyb20gJ0AvY29tcG9uZW50cy9jb21tb24vcmVwci9SZXByJzsKaW1wb3J0IFBvaW50ZXIgZnJvbSAnQC9jb21wb25lbnRzL2NvbW1vbi9wb2ludGVyL1BvaW50ZXInOwppbXBvcnQgQmlvIGZyb20gJ0AvY29tcG9uZW50cy9hYm91dC9iaW8vQmlvJzsKaW1wb3J0IEJsb2NrcXVvdGUgZnJvbSAnQC9jb21wb25lbnRzL2Fib3V0L2Jsb2NrcXVvdGUvQmxvY2txdW90ZSc7CmltcG9ydCBhY3Rpb25hYmxlIGZyb20gJ0AvbWl4aW5zL2FjdGlvbmFibGUnOwppbXBvcnQgY29sb3JlZCBmcm9tICdAL21peGlucy9jb2xvcmVkJzsKaW1wb3J0IGJpbyBmcm9tICdAL2RhdGEvYmlvLmpzb24nOwppbXBvcnQgY29mZmVlIGZyb20gJ0AvYXNzZXRzL2ljb25zL2NvZmZlZS5zdmcnOwppbXBvcnQgdHYgZnJvbSAnQC9hc3NldHMvaWNvbnMvdHYuc3ZnJzsKaW1wb3J0IGZpbG0gZnJvbSAnQC9hc3NldHMvaWNvbnMvZmlsbS5zdmcnOwppbXBvcnQgbXVzaWMgZnJvbSAnQC9hc3NldHMvaWNvbnMvbXVzaWMuc3ZnJzsKaW1wb3J0IHdhbGsgZnJvbSAnQC9hc3NldHMvaWNvbnMvd2Fsay5zdmcnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1BlcnNvbmFsJywKICBtaXhpbnM6IFthY3Rpb25hYmxlLCBjb2xvcmVkXSwKICBjb21wb25lbnRzOiB7CiAgICBDYXJkOiBDYXJkLAogICAgR3JpZDogR3JpZCwKICAgIEdyaWRDZWxsOiBHcmlkLkNlbGwsCiAgICBJY29uOiBJY29uLAogICAgUmVwcjogUmVwciwKICAgIFBvaW50ZXI6IFBvaW50ZXIsCiAgICBCaW86IEJpbywKICAgIEJsb2NrcXVvdGU6IEJsb2NrcXVvdGUKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBiaW86IGJpbywKICAgICAgcGF0aHM6IHsKICAgICAgICBmZWRvcmE6IGZlZG9yYSwKICAgICAgICBzYWZhcmk6IHNhZmFyaSwKICAgICAgICBhcHBsZTogYXBwbGUKICAgICAgfSwKICAgICAgaWNvbnM6IHsKICAgICAgICBjb2ZmZWU6IGNvZmZlZSwKICAgICAgICB0djogdHYsCiAgICAgICAgZmlsbTogZmlsbSwKICAgICAgICBtdXNpYzogbXVzaWMsCiAgICAgICAgd2Fsazogd2FsawogICAgICB9CiAgICB9OwogIH0KfTs="},{"version":3,"sources":["Personal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA,SAAA,IAAA,IAAA,MAAA,QAAA,2BAAA;AACA,SAAA,IAAA,IAAA,MAAA,QAAA,2BAAA;AACA,SAAA,IAAA,IAAA,KAAA,QAAA,0BAAA;AAEA,OAAA,IAAA,MAAA,+BAAA;AACA,OAAA,IAAA,MAAA,+BAAA;AAEA,OAAA,IAAA,MAAA,+BAAA;AACA,OAAA,IAAA,MAAA,+BAAA;AACA,OAAA,OAAA,MAAA,qCAAA;AAEA,OAAA,GAAA,MAAA,4BAAA;AACA,OAAA,UAAA,MAAA,0CAAA;AAEA,OAAA,UAAA,MAAA,qBAAA;AACA,OAAA,OAAA,MAAA,kBAAA;AAEA,OAAA,GAAA,MAAA,iBAAA;AAEA,OAAA,MAAA,MAAA,2BAAA;AACA,OAAA,EAAA,MAAA,uBAAA;AACA,OAAA,IAAA,MAAA,yBAAA;AACA,OAAA,KAAA,MAAA,0BAAA;AACA,OAAA,IAAA,MAAA,yBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,MAAA,EAAA,CACA,UADA,EAEA,OAFA,CAFA;AAMA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA,IADA;AAEA,IAAA,IAAA,EAAA,IAFA;AAGA,IAAA,QAAA,EAAA,IAAA,CAAA,IAHA;AAKA,IAAA,IAAA,EAAA,IALA;AAMA,IAAA,IAAA,EAAA,IANA;AAOA,IAAA,OAAA,EAAA,OAPA;AASA,IAAA,GAAA,EAAA,GATA;AAUA,IAAA,UAAA,EAAA;AAVA,GANA;AAkBA,EAAA,IAlBA,kBAkBA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,GADA;AAEA,MAAA,KAAA,EAAA;AACA,QAAA,MAAA,EAAA,MADA;AAEA,QAAA,MAAA,EAAA,MAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OAFA;AAOA,MAAA,KAAA,EAAA;AACA,QAAA,MAAA,EAAA,MADA;AAEA,QAAA,EAAA,EAAA,EAFA;AAGA,QAAA,IAAA,EAAA,IAHA;AAIA,QAAA,KAAA,EAAA,KAJA;AAKA,QAAA,IAAA,EAAA;AALA;AAPA,KAAA;AAeA;AAlCA,CAAA","sourcesContent":["<template>\n  <Grid class=\"personal\">\n    <GridCell :span-set=\"[12, 12, 6, 6, 6]\">\n      <Card\n        :color=\"color\"\n        title=\"You meant personally?\">\n        <p>\n          <em>\"Manners maketh man.\"</em> So do opinions and hobbies. Here\n          is a sneak peek of just that, so you can know me a little better\n          and we can be friends, which will never happen if you love Chrome/Vue/Java.\n        </p>\n        <RouterLink\n          class=\"cta\"\n          tabindex=\"0\"\n          :to=\"{name: 'contact'}\"\n          @focus.native=\"handleCtaFocus\"\n          @blur.native=\"handleCtaBlur\">\n          <Pointer\n            :color=\"color\"\n            :is-focused=\"isCtaFocused\">\n            <template #default>Drop a message</template>\n          </Pointer>\n        </RouterLink>\n      </Card>\n    </GridCell>\n\n    <GridCell :span-set=\"[12, 12, 6, 6, 6]\">\n      <Card\n        :color=\"color\"\n        title=\"A favourite quote\">\n        <Blockquote :color=\"color\"/>\n      </Card>\n    </GridCell>\n\n    <template v-for=\"(category, index) in bio\">\n      <GridCell\n        v-for=\"(item, count) in category.list\"\n        class=\"personality singular\"\n        :key=\"`singleton-${index}-${count}`\"\n        :span-set=\"[3]\">\n        <Card\n          :color=\"color\">\n          <template #title>\n            <span :class=\"`${color}-colored`\">\n              <Icon\n                v-if=\"item.icon\"\n                :icon=\"item.icon\"\n                :path=\"icons[item.icon]\"\n                fixed-width/>\n              <Repr\n                v-if=\"item.brand\"\n                :path=\"paths[item.brand]\"/>\n            </span>\n          </template>\n          <template #default>\n            <div>\n              <span class=\"secondary-colored\">\n                {{ category.heading }}\n              </span>\n              <span v-html=\"item.text\"/>.\n            </div>\n          </template>\n        </Card>\n      </GridCell>\n    </template>\n\n    <GridCell\n      v-for=\"(category, index) in bio\"\n      class=\"personality plural\"\n      :key=\"`scroller-${index}`\"\n      :span-set=\"[12]\">\n      <Card\n        :color=\"color\"\n        :title=\"`${category.heading}…`\">\n        <Bio\n          v-for=\"(item, count) in category.list\"\n          :key=\"`content-${index}-${count}`\"\n          :color=\"color\"\n          :icon=\"item.icon\"\n          :path=\"paths[item.brand] || icons[item.icon]\">\n          <span v-html=\"`…${item.text}.`\"/>\n        </Bio>\n      </Card>\n    </GridCell>\n  </Grid>\n</template>\n\n<script>\n  import { path as fedora } from 'simple-icons/icons/fedora'\n  import { path as safari } from 'simple-icons/icons/safari'\n  import { path as apple } from 'simple-icons/icons/apple'\n\n  import Card from '@/components/layout/card/Card'\n  import Grid from '@/components/layout/grid/Grid'\n\n  import Icon from '@/components/common/icon/Icon'\n  import Repr from '@/components/common/repr/Repr'\n  import Pointer from '@/components/common/pointer/Pointer'\n\n  import Bio from '@/components/about/bio/Bio'\n  import Blockquote from '@/components/about/blockquote/Blockquote'\n\n  import actionable from '@/mixins/actionable'\n  import colored from '@/mixins/colored'\n\n  import bio from '@/data/bio.json'\n\n  import coffee from '@/assets/icons/coffee.svg'\n  import tv from '@/assets/icons/tv.svg'\n  import film from '@/assets/icons/film.svg'\n  import music from '@/assets/icons/music.svg'\n  import walk from '@/assets/icons/walk.svg'\n\n  export default {\n    name: 'Personal',\n    mixins: [\n      actionable,\n      colored\n    ],\n    components: {\n      Card,\n      Grid,\n      GridCell: Grid.Cell,\n\n      Icon,\n      Repr,\n      Pointer,\n\n      Bio,\n      Blockquote\n    },\n    data () {\n      return {\n        bio,\n        paths: {\n          fedora,\n          safari,\n          apple\n        },\n        icons: {\n          coffee,\n          tv,\n          film,\n          music,\n          walk\n        }\n      }\n    }\n  }\n</script>\n\n<style scoped lang=\"scss\" src=\"./Personal.scss\"/>\n"],"sourceRoot":"src/templates/about/partials/personal"}]}