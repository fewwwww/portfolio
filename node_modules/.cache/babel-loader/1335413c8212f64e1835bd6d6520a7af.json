{"remainingRequest":"/Users/msfew/Downloads/portfolio-master/node_modules/babel-loader/lib/index.js!/Users/msfew/Downloads/portfolio-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/msfew/Downloads/portfolio-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/msfew/Downloads/portfolio-master/src/components/portfolio/spinner/Spinner.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/msfew/Downloads/portfolio-master/src/components/portfolio/spinner/Spinner.vue","mtime":1617939276000},{"path":"/Users/msfew/Downloads/portfolio-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/Downloads/portfolio-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/msfew/Downloads/portfolio-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/Downloads/portfolio-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnRpbWVycyI7Ci8vCi8vCi8vCi8vCi8vCi8vCgovKioKICogVGhpcyBjb21wb25lbnQgcHJpbnRzIGEgc3Bpbm5lciB0aGF0IGlzIGNvbXBvc2VkIG9mIFVuaWNvZGUgY2hhcmFjdGVycywKICogYXMgd291bGQgYmUgc2VlbiBpbiBhIHRlcm1pbmFsIGVtdWxhdG9yLgogKi8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTcGlubmVyJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc3Bpbm5lclN0cmluZ3M6IFsn4qGH4qCAJywgJ+Kgj+KggCcsICfioIvioIEnLCAn4qCJ4qCJJywgJ+KgiOKgmScsICfioIDioLknLCAn4qCA4qK4JywgJ+KggOKjsCcsICfiooDio6AnLCAn4qOA4qOAJywgJ+KjhOKhgCcsICfio4bioIAnXSwKICAgICAgaW5kZXg6IDAsCiAgICAgIGludGVydmFsOiAwLjA1LAogICAgICB1cGRhdGVMb29wZXI6IG51bGwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvKioKICAgICAqIFN0YXJ0IHRoZSBsb29wIHRoYXQgY2hhbmdlcyB0aGUgc3Bpbm5lciBzdHJpbmcgcGVyaW9kaWNhbGx5LgogICAgICovCiAgICBzdGFydExvb3Bpbmc6IGZ1bmN0aW9uIHN0YXJ0TG9vcGluZygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMudXBkYXRlTG9vcGVyID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLmluZGV4ID0gKytfdGhpcy5pbmRleCAlIF90aGlzLnNwaW5uZXJTdHJpbmdzLmxlbmd0aDsKICAgICAgfSwgdGhpcy5pbnRlcnZhbCAqIDEwMDApOwogICAgfSwKCiAgICAvKioKICAgICAqIFN0b3AgdGhlIGxvb3AgdGhhdCBjaGFuZ2VzIHRoZSBzcGlubmVyIHN0cmluZyBwZXJpb2RpY2FsbHkuCiAgICAgKi8KICAgIHN0b3BMb29waW5nOiBmdW5jdGlvbiBzdG9wTG9vcGluZygpIHsKICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnVwZGF0ZUxvb3Blcik7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5zdGFydExvb3BpbmcoKTsKICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0aGlzLnN0b3BMb29waW5nKCk7CiAgfQp9Ow=="},{"version":3,"sources":["Spinner.vue"],"names":[],"mappings":";;;;;;;;AAOA;;;;AAIA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,CACA,IADA,EACA,IADA,EACA,IADA,EACA,IADA,EACA,IADA,EACA,IADA,EAEA,IAFA,EAEA,IAFA,EAEA,IAFA,EAEA,IAFA,EAEA,IAFA,EAEA,IAFA,CADA;AAKA,MAAA,KAAA,EAAA,CALA;AAMA,MAAA,QAAA,EAAA,IANA;AAOA,MAAA,YAAA,EAAA;AAPA,KAAA;AASA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA;;;AAGA,IAAA,YAJA,0BAIA;AAAA;;AACA,WAAA,YAAA,GAAA,WAAA,CAAA,YAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,EAAA,KAAA,CAAA,KAAA,GAAA,KAAA,CAAA,cAAA,CAAA,MAAA;AACA,OAFA,EAEA,KAAA,QAAA,GAAA,IAFA,CAAA;AAGA,KARA;;AASA;;;AAGA,IAAA,WAZA,yBAYA;AACA,MAAA,aAAA,CAAA,KAAA,YAAA,CAAA;AACA;AAdA,GAbA;AA6BA,EAAA,OA7BA,qBA6BA;AACA,SAAA,YAAA;AACA,GA/BA;AAgCA,EAAA,aAhCA,2BAgCA;AACA,SAAA,WAAA;AACA;AAlCA,CAAA","sourcesContent":["<template>\n  <span class=\"spinner\">\n    {{ spinnerStrings[index] }}\n  </span>\n</template>\n\n<script>\n  /**\n   * This component prints a spinner that is composed of Unicode characters,\n   * as would be seen in a terminal emulator.\n   */\n  export default {\n    name: 'Spinner',\n    data () {\n      return {\n        spinnerStrings: [\n          '⡇⠀', '⠏⠀', '⠋⠁', '⠉⠉', '⠈⠙', '⠀⠹',\n          '⠀⢸', '⠀⣰', '⢀⣠', '⣀⣀', '⣄⡀', '⣆⠀'\n        ],\n        index: 0,\n        interval: 0.05,\n        updateLooper: null\n      }\n    },\n    methods: {\n      /**\n       * Start the loop that changes the spinner string periodically.\n       */\n      startLooping () {\n        this.updateLooper = setInterval(() => {\n          this.index = ++this.index % this.spinnerStrings.length\n        }, this.interval * 1000)\n      },\n      /**\n       * Stop the loop that changes the spinner string periodically.\n       */\n      stopLooping () {\n        clearInterval(this.updateLooper)\n      }\n    },\n    created () {\n      this.startLooping()\n    },\n    beforeDestroy () {\n      this.stopLooping()\n    }\n  }\n</script>\n"],"sourceRoot":"src/components/portfolio/spinner"}]}