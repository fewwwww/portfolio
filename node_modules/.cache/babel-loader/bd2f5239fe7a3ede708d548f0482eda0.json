{"remainingRequest":"/Users/msfew/Downloads/portfolio/node_modules/babel-loader/lib/index.js!/Users/msfew/Downloads/portfolio/node_modules/eslint-loader/index.js??ref--13-0!/Users/msfew/Downloads/portfolio/src/mixins/argumented.js","dependencies":[{"path":"/Users/msfew/Downloads/portfolio/src/mixins/argumented.js","mtime":1617939276000},{"path":"/Users/msfew/Downloads/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/Downloads/portfolio/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/msfew/Downloads/portfolio/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgYXJnIGZyb20gJ2FyZyc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wdXRlZDogewogICAgYXJnczogZnVuY3Rpb24gYXJncygpIHsKICAgICAgLy8gR2VuZXJhdGUgJ2FyZycgY29tcGxpYW50IGFyZ3VtZW50IHNwZWNpZmljYXRpb24KICAgICAgdmFyIGFyZ1NwZWMgPSB0aGlzLiRvcHRpb25zLmFyZ1NwZWM7CiAgICAgIHZhciBzcGVjID0ge307CiAgICAgIGFyZ1NwZWMua3dhcmdzLmZvckVhY2goZnVuY3Rpb24gKGFyZykgewogICAgICAgIHNwZWNbYXJnLm5hbWVdID0gYXJnLnR5cGU7CgogICAgICAgIGlmIChhcmcuYWxpYXNlcykgewogICAgICAgICAgYXJnLmFsaWFzZXMuZm9yRWFjaChmdW5jdGlvbiAoYWxpYXMpIHsKICAgICAgICAgICAgc3BlY1thbGlhc10gPSBhcmcubmFtZTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSk7IC8vIFJ1biBhcmd1bWVudCBwYXJzaW5nCgogICAgICB2YXIgcHJvY2Vzc2VkQXJncyA9IGFyZyhzcGVjLCB7CiAgICAgICAgYXJndjogdGhpcy5hcmd2LAogICAgICAgIHBlcm1pc3NpdmU6IHRydWUKICAgICAgfSk7IC8vIENvbnZlcnQgYmFjayB0byBwb3J0Zm9saW8gYXJndW1lbnQgc3BlY2lmaWNhdGlvbgoKICAgICAgdmFyIGFyZ3MgPSB7fTsKICAgICAgYXJnU3BlYy5rd2FyZ3MuZm9yRWFjaChmdW5jdGlvbiAoa3dhcmcpIHsKICAgICAgICB2YXIgZGVkYXNoZWROYW1lID0ga3dhcmcubmFtZS5yZXBsYWNlKC8tLS9nLCAnJyk7CiAgICAgICAgYXJnc1tkZWRhc2hlZE5hbWVdID0gcHJvY2Vzc2VkQXJnc1trd2FyZy5uYW1lXTsKICAgICAgfSk7CiAgICAgIGFyZ1NwZWMuYXJncy5mb3JFYWNoKGZ1bmN0aW9uIChhcmcpIHsKICAgICAgICBhcmdzW2FyZy5uYW1lXSA9IHByb2Nlc3NlZEFyZ3MuXy5zaGlmdCgpIHx8IGFyZ1siZGVmYXVsdCJdOwogICAgICB9KTsKICAgICAgcmV0dXJuIGFyZ3M7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/msfew/Downloads/portfolio/src/mixins/argumented.js"],"names":["arg","computed","args","argSpec","$options","spec","kwargs","forEach","name","type","aliases","alias","processedArgs","argv","permissive","kwarg","dedashedName","replace","_","shift"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AAEA,eAAe;AACbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IADQ,kBACA;AACN;AACA,UAAMC,OAAO,GAAG,KAAKC,QAAL,CAAcD,OAA9B;AACA,UAAME,IAAI,GAAG,EAAb;AAEAF,MAAAA,OAAO,CAACG,MAAR,CAAeC,OAAf,CAAuB,UAAAP,GAAG,EAAI;AAC5BK,QAAAA,IAAI,CAACL,GAAG,CAACQ,IAAL,CAAJ,GAAiBR,GAAG,CAACS,IAArB;;AAEA,YAAIT,GAAG,CAACU,OAAR,EAAiB;AACfV,UAAAA,GAAG,CAACU,OAAJ,CAAYH,OAAZ,CAAoB,UAAAI,KAAK,EAAI;AAC3BN,YAAAA,IAAI,CAACM,KAAD,CAAJ,GAAcX,GAAG,CAACQ,IAAlB;AACD,WAFD;AAGD;AACF,OARD,EALM,CAeN;;AACA,UAAMI,aAAa,GAAGZ,GAAG,CACvBK,IADuB,EAEvB;AACEQ,QAAAA,IAAI,EAAE,KAAKA,IADb;AAEEC,QAAAA,UAAU,EAAE;AAFd,OAFuB,CAAzB,CAhBM,CAwBN;;AACA,UAAMZ,IAAI,GAAG,EAAb;AACAC,MAAAA,OAAO,CAACG,MAAR,CAAeC,OAAf,CAAuB,UAAAQ,KAAK,EAAI;AAC9B,YAAMC,YAAY,GAAGD,KAAK,CAACP,IAAN,CAAWS,OAAX,CAAmB,KAAnB,EAA0B,EAA1B,CAArB;AACAf,QAAAA,IAAI,CAACc,YAAD,CAAJ,GAAqBJ,aAAa,CAACG,KAAK,CAACP,IAAP,CAAlC;AACD,OAHD;AAIAL,MAAAA,OAAO,CAACD,IAAR,CAAaK,OAAb,CAAqB,UAAAP,GAAG,EAAI;AAC1BE,QAAAA,IAAI,CAACF,GAAG,CAACQ,IAAL,CAAJ,GAAiBI,aAAa,CAACM,CAAd,CAAgBC,KAAhB,MAA2BnB,GAAG,WAA/C;AACD,OAFD;AAIA,aAAOE,IAAP;AACD;AApCO;AADG,CAAf","sourcesContent":["import arg from 'arg'\n\nexport default {\n  computed: {\n    args () {\n      // Generate 'arg' compliant argument specification\n      const argSpec = this.$options.argSpec\n      const spec = {}\n\n      argSpec.kwargs.forEach(arg => {\n        spec[arg.name] = arg.type\n\n        if (arg.aliases) {\n          arg.aliases.forEach(alias => {\n            spec[alias] = arg.name\n          })\n        }\n      })\n\n      // Run argument parsing\n      const processedArgs = arg(\n        spec,\n        {\n          argv: this.argv,\n          permissive: true\n        }\n      )\n\n      // Convert back to portfolio argument specification\n      const args = {}\n      argSpec.kwargs.forEach(kwarg => {\n        const dedashedName = kwarg.name.replace(/--/g, '')\n        args[dedashedName] = processedArgs[kwarg.name]\n      })\n      argSpec.args.forEach(arg => {\n        args[arg.name] = processedArgs._.shift() || arg.default\n      })\n\n      return args\n    }\n  }\n}\n"]}]}