{"remainingRequest":"/Users/msfew/portfolio/node_modules/thread-loader/dist/cjs.js!/Users/msfew/portfolio/node_modules/babel-loader/lib/index.js!/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/msfew/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/msfew/portfolio/src/components/app/themer/Themer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/msfew/portfolio/src/components/app/themer/Themer.vue","mtime":1615276825496},{"path":"/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZyb20iOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgVHJpcCBmcm9tICdAL2NvbXBvbmVudHMvY29tbW9uL3RyaXAvVHJpcCc7CmltcG9ydCBJY29uIGZyb20gJ0AvY29tcG9uZW50cy9jb21tb24vaWNvbi9JY29uJzsKaW1wb3J0IGNvbG9ycyBmcm9tICdAL3N0eWxlcy9leHBvcnRzL2NvbG9ycy5zY3NzJzsKaW1wb3J0IGNvbXB1dGVyIGZyb20gJ0AvYXNzZXRzL2ljb25zL2NvbXB1dGVyLnN2Zyc7CmltcG9ydCBzdW4gZnJvbSAnQC9hc3NldHMvaWNvbnMvc3VuLnN2Zyc7CmltcG9ydCBtb29uIGZyb20gJ0AvYXNzZXRzL2ljb25zL21vb24uc3ZnJzsKLyoqCiAqIFRoaXMgY29tcG9uZW50IGVuYWJsZXMgc3dpdGNoaW5nIGJldHdlZW4gdGhlIGxpZ2h0IGFuZCBkYXJrIHZhcmlhbnRzCiAqIG9mIFtTb2xhcml6ZWQgYnkgRXRoYW4gU2Nob29ub3Zlcl0oaHR0cHM6Ly9ldGhhbnNjaG9vbm92ZXIuY29tL3NvbGFyaXplZC8pLgogKi8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVGhlbWVyJywKICBjb21wb25lbnRzOiB7CiAgICBJY29uOiBJY29uLAogICAgVHJpcDogVHJpcAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRoZW1lczogewogICAgICAgIHN5c3RlbTogewogICAgICAgICAgdGhlbWVDb2xvcjogbnVsbCAvLyBhdXRvbWF0aWNhbGx5IG1hcHMgdG8gbGlnaHQgb3IgZGFyawoKICAgICAgICB9LAogICAgICAgIGxpZ2h0OiB7CiAgICAgICAgICB0aGVtZUNvbG9yOiBjb2xvcnMuY29sb3JCYXNlMgogICAgICAgIH0sCiAgICAgICAgZGFyazogewogICAgICAgICAgdGhlbWVDb2xvcjogY29sb3JzLmNvbG9yQmFzZTAyCiAgICAgICAgfQogICAgICB9LAogICAgICB0aGVtZTogbnVsbCwKICAgICAgZGVmYXVsdDogJ3N5c3RlbScsCiAgICAgIGljb25zOiB7CiAgICAgICAgY29tcHV0ZXI6IGNvbXB1dGVyLAogICAgICAgIHN1bjogc3VuLAogICAgICAgIG1vb246IG1vb24KICAgICAgfQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICAvKioKICAgICAqIEdldCB0aGUgYXJyYXkgb2Ygb3B0aW9ucyB0byBwYXNzIHRvIHRoZSBUcmlwIGNvbXBvbmVudC4KICAgICAqIEByZXR1cm5zIHtBcnJheX0gdGhlIGxpc3Qgb2Ygb3B0aW9ucyBjb25zaXN0aW5nIG9mIGEgbmFtZSBhbmQgYSB0aXRsZQogICAgICovCiAgICBvcHRpb25zOiBmdW5jdGlvbiBvcHRpb25zKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHRoZW1lcyA9IE9iamVjdC5rZXlzKHRoaXMudGhlbWVzKTsKICAgICAgcmV0dXJuIHRoZW1lcy5tYXAoZnVuY3Rpb24gKHRoZW1lKSB7CiAgICAgICAgdmFyIHRpdGxlOwoKICAgICAgICBpZiAodGhlbWUgPT09IF90aGlzLnRoZW1lKSB7CiAgICAgICAgICB0aXRsZSA9ICJTdGF5IG9uIHRoZSAiLmNvbmNhdCh0aGVtZSwgIiB0aGVtZS4iKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGl0bGUgPSAiU3dpdGNoIHRvIHRoZSAiLmNvbmNhdCh0aGVtZSwgIiB0aGVtZS4iKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiB7CiAgICAgICAgICBuYW1lOiB0aGVtZSwKICAgICAgICAgIHRpdGxlOiB0aXRsZQogICAgICAgIH07CiAgICAgIH0pOwogICAgfSwKCiAgICAvKioKICAgICAqIEdldCB3aGV0aGVyIHRoZSB1c2VyIHByZWZlcnMgdGhlIGRhcmsgdGhlbWUuCiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gd2hldGhlciB0aGUgdXNlciBwcmVmZXJzIGEgZGFyayB0aGVtZQogICAgICovCiAgICBwcmVmZXJEYXJrOiBmdW5jdGlvbiBwcmVmZXJEYXJrKCkgewogICAgICByZXR1cm4gd2luZG93Lm1hdGNoTWVkaWEoJyhwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyayknKS5tYXRjaGVzOwogICAgfSwKCiAgICAvKioKICAgICAqIEZpbmQgdGhlIERPTSBlbGVtZW50IGNvcnJlc3BvbmRpbmcgdG8gdGhlICd0aGVtZS1jb2xvcicgbWV0YSB0YWcuCiAgICAgKiBAcmV0dXJucyB7SFRNTE1ldGFFbGVtZW50fSB0aGUgJ3RoZW1lLWNvbG9yJyBtZXRhIHRhZwogICAgICovCiAgICB0aGVtZUNvbG9yRWxlbWVudDogZnVuY3Rpb24gdGhlbWVDb2xvckVsZW1lbnQoKSB7CiAgICAgIHJldHVybiBBcnJheS5mcm9tKGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdtZXRhJykpLmZpbmQoZnVuY3Rpb24gKGVsZW0pIHsKICAgICAgICByZXR1cm4gZWxlbS5uYW1lID09PSAndGhlbWUtY29sb3InOwogICAgICB9KTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBHZXQgdGhlIGNvbG9yIHRoYXQgc2hvdWxkIGJlIHNldCBhcyB0aGUgdmFsdWUgb2YgdGhlICd0aGVtZS1jb2xvcicgbWV0YQogICAgICogdGFnLiBGb3IgdGhlIHN5c3RlbSB0aGVtZSwgaXQgbWFwcyB0byB0aGUgZGFyayBvciBsaWdodCB2YWx1ZSBhcyBzZXQKICAgICAqIGJ5IHRoZSBvcGVyYXRpbmctc3lzdGVtLgogICAgICogQHJldHVybnMge3N0cmluZ30gdGhlIGNvZGUgZm9yIHRoZSBjb2xvciBmb3IgdGhlICd0aGVtZS1jb2xvcicgbWV0YSB0YWcKICAgICAqLwogICAgdGhlbWVDb2xvcjogZnVuY3Rpb24gdGhlbWVDb2xvcigpIHsKICAgICAgaWYgKHRoaXMudGhlbWUgPT09ICdzeXN0ZW0nKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucHJlZmVyRGFyayA/IHRoaXMudGhlbWVzLmRhcmsudGhlbWVDb2xvciA6IHRoaXMudGhlbWVzLmxpZ2h0LnRoZW1lQ29sb3I7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHRoaXMudGhlbWVzW3RoaXMudGhlbWVdLnRoZW1lQ29sb3I7CiAgICAgIH0KICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAvKioKICAgICAqIFN5bmMgY2hhbmdlcyBmcm9tIHRoZSB0aGVtZSBkYXRhIHZhcmlhYmxlIHRvIHRoZSByb290IGNsYXNzIGFuZAogICAgICogYWxzbyB1cGRhdGVzIGxvY2FsIHN0b3JhZ2UgZm9yIHBlcnNpc3RlbmNlLgogICAgICogQHBhcmFtIHtzdHJpbmd9IHRvIC0gdGhlIG5ldyB2YWx1ZSBvZiB0aGUgdGhlbWUKICAgICAqIEBwYXJhbSB7c3RyaW5nfSBmcm9tIC0gdGhlIG9sZCB2YWx1ZSBvZiB0aGUgdGhlbWUKICAgICAqLwogICAgdGhlbWU6IGZ1bmN0aW9uIHRoZW1lKHRvLCBmcm9tKSB7CiAgICAgIGlmICh0byAhPT0gZnJvbSkgewogICAgICAgIC8vIEJyZWFrcyByZWN1cnNpb24KICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2V0QXR0cmlidXRlKCd0aGVtZScsIHRoaXMudGhlbWUpOyAvLyBTZXQgdGhlIG5ldyB0aGVtZSBjb2xvcgoKICAgICAgICB0aGlzLnRoZW1lQ29sb3JFbGVtZW50LmNvbnRlbnQgPSB0aGlzLnRoZW1lQ29sb3I7IC8vIFBlcnNpc3QgdGhlbWUgdG8gbG9jYWwgc3RvcmFnZQoKICAgICAgICBsb2NhbFN0b3JhZ2UudGhlbWUgPSB0bzsKICAgICAgfQogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGlmIChsb2NhbFN0b3JhZ2UudGhlbWUpIHsKICAgICAgLy8gU3dpdGNoIHRvIGxhc3QgdXNlZCB0aGVtZQogICAgICB0aGlzLnRoZW1lID0gbG9jYWxTdG9yYWdlLnRoZW1lOwogICAgfSBlbHNlIHsKICAgICAgLy8gU2V0IHRoZW1lIHRvIHRoZSBkZWZhdWx0IHZhbHVlCiAgICAgIHRoaXMudGhlbWUgPSB0aGlzLmRlZmF1bHQ7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Themer.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    class=\"themer\">\n    <Trip\n      color=\"green\"\n      :shortkey=\"['t']\"\n      :options=\"options\"\n      v-model=\"theme\">\n      <template #system>\n        <Icon\n          icon=\"computer\"\n          :path=\"icons.computer\"/>\n      </template>\n      <template #light>\n        <Icon\n          icon=\"sun\"\n          :path=\"icons.sun\"/>\n      </template>\n      <template #dark>\n        <Icon\n          icon=\"moon\"\n          :path=\"icons.moon\"/>\n      </template>\n    </Trip>\n  </div>\n</template>\n\n<script>\n  import Trip from '@/components/common/trip/Trip'\n  import Icon from '@/components/common/icon/Icon'\n\n  import colors from '@/styles/exports/colors.scss'\n\n  import computer from '@/assets/icons/computer.svg'\n  import sun from '@/assets/icons/sun.svg'\n  import moon from '@/assets/icons/moon.svg'\n\n  /**\n   * This component enables switching between the light and dark variants\n   * of [Solarized by Ethan Schoonover](https://ethanschoonover.com/solarized/).\n   */\n  export default {\n    name: 'Themer',\n    components: {\n      Icon,\n      Trip\n    },\n    data () {\n      return {\n        themes: {\n          system: {\n            themeColor: null // automatically maps to light or dark\n          },\n          light: {\n            themeColor: colors.colorBase2\n          },\n          dark: {\n            themeColor: colors.colorBase02\n          }\n        },\n        theme: null,\n        default: 'system',\n        icons: {\n          computer,\n          sun,\n          moon\n        }\n      }\n    },\n    computed: {\n      /**\n       * Get the array of options to pass to the Trip component.\n       * @returns {Array} the list of options consisting of a name and a title\n       */\n      options () {\n        const themes = Object.keys(this.themes)\n        return themes.map(theme => {\n          let title\n          if (theme === this.theme) {\n            title = `Stay on the ${theme} theme.`\n          } else {\n            title = `Switch to the ${theme} theme.`\n          }\n          return {\n            name: theme,\n            title\n          }\n        })\n      },\n\n      /**\n       * Get whether the user prefers the dark theme.\n       * @returns {boolean} whether the user prefers a dark theme\n       */\n      preferDark () {\n        return window.matchMedia('(prefers-color-scheme: dark)').matches\n      },\n\n      /**\n       * Find the DOM element corresponding to the 'theme-color' meta tag.\n       * @returns {HTMLMetaElement} the 'theme-color' meta tag\n       */\n      themeColorElement () {\n        return Array.from(\n          document.getElementsByTagName('meta')\n        ).find(elem => elem.name === 'theme-color')\n      },\n      /**\n       * Get the color that should be set as the value of the 'theme-color' meta\n       * tag. For the system theme, it maps to the dark or light value as set\n       * by the operating-system.\n       * @returns {string} the code for the color for the 'theme-color' meta tag\n       */\n      themeColor () {\n        if (this.theme === 'system') {\n          return this.preferDark\n            ? this.themes.dark.themeColor\n            : this.themes.light.themeColor\n        } else {\n          return this.themes[this.theme].themeColor\n        }\n      }\n    },\n    watch: {\n      /**\n       * Sync changes from the theme data variable to the root class and\n       * also updates local storage for persistence.\n       * @param {string} to - the new value of the theme\n       * @param {string} from - the old value of the theme\n       */\n      theme (to, from) {\n        if (to !== from) { // Breaks recursion\n          document.documentElement.setAttribute('theme', this.theme)\n\n          // Set the new theme color\n          this.themeColorElement.content = this.themeColor\n\n          // Persist theme to local storage\n          localStorage.theme = to\n        }\n      }\n    },\n    created () {\n      if (localStorage.theme) {\n        // Switch to last used theme\n        this.theme = localStorage.theme\n      } else {\n        // Set theme to the default value\n        this.theme = this.default\n      }\n    }\n  }\n</script>\n\n<style scoped lang=\"scss\" src=\"./Themer.scss\"/>\n"],"sourceRoot":"src/components/app/themer"}]}