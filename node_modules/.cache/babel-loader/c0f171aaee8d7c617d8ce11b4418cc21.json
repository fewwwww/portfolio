{"remainingRequest":"/Users/msfew/portfolio/node_modules/thread-loader/dist/cjs.js!/Users/msfew/portfolio/node_modules/babel-loader/lib/index.js!/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/msfew/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/msfew/portfolio/src/components/portfolio/terminal/pieces/present/Present.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/msfew/portfolio/src/components/portfolio/terminal/pieces/present/Present.vue","mtime":1615276825501},{"path":"/Users/msfew/portfolio/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Present.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    class=\"present\"\n    @click=\"takeFocus\"\n    title=\"[Ctrl + Shift + C] Focus on the terminal input.\">\n    <label\n      class=\"prompt-label\"\n      for=\"command-field\">\n      <Prompt\n        :directory=\"currentNode.name\"\n        is-active/>\n    </label>\n    <input\n      v-shortkey.focus=\"['ctrl', 'shift', 'c']\"\n      v-model=\"command\"\n      class=\"command-field\"\n      id=\"command-field\"\n      :style=\"commandFieldStyles\"\n\n      type=\"text\"\n      autocomplete=\"off\"\n      autocapitalize=\"off\"\n      spellcheck=\"false\"\n\n      @keydown.escape.exact.prevent=\"loseFocus\"\n      @keydown.arrow-up.exact.prevent=\"traverseHistoryUp\"\n      @keydown.arrow-down.exact.prevent=\"traverseHistoryDown\"\n      @keydown.tab.exact.prevent=\"autocompleteCommand\"\n      @keydown.enter.exact.prevent=\"submitCommand\"\n      @keydown.c.shift.ctrl.exact.prevent=\"cancelCommand\"\n      @keyup.stop=\"processKeyup\"\n      @input.stop=\"processInput\"\n      @click.stop=\"processClick\"\n\n      ref=\"commandField\">\n    <span\n      class=\"faux-caret\"\n      :style=\"fauxCaretStyles\">&nbsp;</span>\n  </div>\n</template>\n\n<script>\n  import { mapActions, mapState } from 'vuex'\n\n  import Prompt from '../prompt/Prompt'\n\n  /**\n   * This command represents the present of the terminal, waiting for the user's\n   * input with a prompt.\n   */\n  export default {\n    name: 'Present',\n    components: {\n      Prompt\n    },\n    data () {\n      return {\n        reactivityHack: 0,\n        command: '',\n        traversal: {\n          index: 0,\n          backup: ''\n        }\n      }\n    },\n    computed: {\n      /**\n       * Get the styles to apply on the command field.\n       * @returns {Object} an mapping of CSS properties and values to apply on the element\n       */\n      commandFieldStyles () {\n        return {\n          '--characters-filled': `${this.command.length}ch`\n        }\n      },\n      /**\n       * Get the styles to apply on the faux caret.\n       * @returns {Object} an mapping of CSS properties and values to apply on the element\n       */\n      fauxCaretStyles () {\n        return {\n          '--characters-displaced': `${this.caretPosition - this.command.length}ch`\n        }\n      },\n\n      /**\n       * Get the position of the caret in the command input field. Since this is\n       * a non-reactive property, an ever changing data value `reactivityHack`\n       * is accessed inside.\n       */\n      caretPosition () {\n        if (!this.reactivityHack) {\n          return\n        }\n        return this.$refs.commandField.selectionStart\n      },\n\n      ...mapState('portfolio', [\n        'currentNode',\n        'interactionHistory',\n        'isProcessing'\n      ])\n    },\n    watch: {\n      /**\n       * When interaction history is changed, which essentially means a new\n       * interaction has been added, scroll to the bottom.\n       */\n      interactionHistory () {\n        this.scrollToCommandField()\n      },\n      /**\n       * When the processing state of the terminal is changed, either when\n       * processing starts or ends, scroll to the bottom.\n       */\n      isProcessing () {\n        this.scrollToCommandField()\n      }\n    },\n    methods: {\n      /**\n       * Grab focus on the command input field from the document. Also moves the\n       * caret to the end of the field.\n       */\n      takeFocus () {\n        this.$refs.commandField.focus()\n        this.$refs.commandField.setSelectionRange(\n          this.command.length,\n          this.command.length\n        )\n        this.reactivityHack++\n      },\n      /**\n       * Give away the focus from the command input field.\n       */\n      loseFocus () {\n        this.$refs.commandField.blur()\n      },\n\n      /**\n       * Access the history stack backwards.\n       */\n      traverseHistoryUp () {\n        if (this.traversal.index === this.interactionHistory.length) {\n          return\n        }\n\n        if (this.traversal.index === 0) {\n          this.traversal.backup = this.command\n        }\n        this.traversal.index++\n        const index = this.interactionHistory.length - this.traversal.index\n        this.command = this.interactionHistory[index].input.command\n      },\n      /**\n       * Access the history stack forwards.\n       */\n      traverseHistoryDown () {\n        if (this.traversal.index === 0) {\n          return\n        }\n\n        this.traversal.index--\n        if (this.traversal.index === 0) {\n          this.command = this.traversal.backup\n        } else {\n          const index = this.interactionHistory.length - this.traversal.index\n          this.command = this.interactionHistory[index].input.command\n        }\n      },\n      /**\n       * Reset history traversal in both directions.\n       */\n      resetTraversal () {\n        this.traversal = {\n          index: 0,\n          backup: ''\n        }\n      },\n\n      /**\n       * Autocomplete the command based on the text entered so far. It populates\n       * the command field if an unambiguous completion can be made and if not,\n       * displays a list of possible choices.\n       */\n      autocompleteCommand () {\n        if (this.command === '') {\n          this.command = 'help'\n        } else {\n          // TODO\n          console.log('Request to autocomplete:', this.command)\n        }\n      },\n      /**\n       * Submit the command for processing and clear the history field for the\n       * next input.\n       */\n      submitCommand () {\n        if (this.command.trim()) {\n          this.runCommand({\n            command: this.command.substring(0)\n          })\n          this.command = ''\n          this.resetTraversal()\n        }\n      },\n      /**\n       * Cancel the execution of the entered command and clear the input field.\n       */\n      cancelCommand () {\n        this.command = ''\n        this.resetTraversal()\n      },\n\n      /**\n       * Handle a keyup event.\n       * This involves updating the data variable `reactivityHack`.\n       */\n      processKeyup () {\n        this.reactivityHack++\n      },\n      /**\n       * Handle an input event.\n       * This involves updating the data variable `reactivityHack`.\n       */\n      processInput () {\n        this.reactivityHack++\n      },\n      /**\n       * Handle a click event.\n       * This involves updating the data variable `reactivityHack`.\n       */\n      processClick () {\n        this.reactivityHack++\n      },\n\n      /**\n       * Scroll to the bottom of the terminal to show the command field.\n       */\n      scrollToCommandField () {\n        this.$nextTick(() => {\n          document.body.scrollIntoView({\n            behavior: 'smooth',\n            block: 'end'\n          })\n        })\n      },\n\n      ...mapActions('portfolio', [\n        'runCommand'\n      ])\n    },\n    /**\n     * Ah, the reactivity hack.\n     *\n     * Refs in Vue are not reactive. So there is no way to reactively know the\n     * position of the cursor in the input referenced by `commandField`. Even if\n     * defined as a computed property, changes made to it are not observed.\n     *\n     * But we can make the computed property reactive by referring to a\n     * different reactive property inside the function, which we update from\n     * time to time. For any event occuring on the command input field with the\n     * potential to update the value of `selectionStart`, we update the data\n     * variable `reactivityHack` on the element. This causes the intended\n     * recomputation of `caretPosition`.\n     *\n     * References:\n     * - https://logaretm.com/blog/2019-10-11-forcing-recomputation-of-computed-properties/\n     */\n    mounted () {\n      this.reactivityHack++\n    }\n  }\n</script>\n\n<style scoped lang=\"scss\" src=\"./Present.scss\"/>\n"],"sourceRoot":"src/components/portfolio/terminal/pieces/present"}]}