{"remainingRequest":"/Users/msfew/portfolio/node_modules/thread-loader/dist/cjs.js!/Users/msfew/portfolio/node_modules/babel-loader/lib/index.js!/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/msfew/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/msfew/portfolio/src/components/portfolio/link/Link.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/msfew/portfolio/src/components/portfolio/link/Link.vue","mtime":1617939276000},{"path":"/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9tc2Zldy9wb3J0Zm9saW8vbm9kZV9tb2R1bGVzL0B2dWUvYmFiZWwtcHJlc2V0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcEFjdGlvbnMsIG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IEljb24gZnJvbSAnQC9jb21wb25lbnRzL2NvbW1vbi9pY29uL0ljb24nOwppbXBvcnQgYnJpZWZjYXNlIGZyb20gJ0AvYXNzZXRzL2ljb25zL2JyaWVmY2FzZS5zdmcnOwppbXBvcnQgY3ViZSBmcm9tICdAL2Fzc2V0cy9pY29ucy9jdWJlLnN2Zyc7CmltcG9ydCBmbGFzaCBmcm9tICdAL2Fzc2V0cy9pY29ucy9mbGFzaC5zdmcnOwppbXBvcnQgZ2l0IGZyb20gJ0AvYXNzZXRzL2ljb25zL2dpdC5zdmcnOwppbXBvcnQgZG9jdW1lbnQgZnJvbSAnQC9hc3NldHMvaWNvbnMvZG9jdW1lbnQuc3ZnJzsKLyoqCiAqIFRoaXMgYmxvY2sgcmVwcmVzZW50cyBhIGxpbmsgdG8gYSBub2RlIGluIHRoZSBmaWxlIHN5c3RlbSwgYmUgaXQgYSBmb2xkZXIKICogb3IgYSBmaWxlLCB3aGljaCBjYW4gYmUgY2xpY2tlZCB0byBlaXRoZXIgZW50ZXIgb3Igb3BlbiBpdCByZXNwZWN0aXZlbHkuCiAqLwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdMaW5rJywKICBjb21wb25lbnRzOiB7CiAgICBJY29uOiBJY29uCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaWNvbnM6IHsKICAgICAgICBicmllZmNhc2U6IGJyaWVmY2FzZSwKICAgICAgICBjdWJlOiBjdWJlLAogICAgICAgIGZsYXNoOiBmbGFzaCwKICAgICAgICBnaXQ6IGdpdCwKICAgICAgICBkb2N1bWVudDogZG9jdW1lbnQKICAgICAgfQogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICAvKioKICAgICAqIF90aGUgbm9kZSB0byBnZW5lcmF0ZSB0aGUgbGluayBmb3JfCiAgICAgKi8KICAgIG5vZGU6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKCiAgICAvKioKICAgICAqIF9hbHRlcm5hdGUgdGV4dCB0byBkaXNwbGF5IGluIHBsYWNlIG9mIHRoZSBub2RlIG5hbWVfCiAgICAgKi8KICAgIGFzOiB7CiAgICAgIHR5cGU6IFN0cmluZwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoewogICAgLyoqCiAgICAgKiBfdGhlIGNsYXNzZXMgdG8gYXBwbHkgdG8gdGhlIGxpbmtfCiAgICAgKi8KICAgIGxpbmtDbGFzc2VzOiBmdW5jdGlvbiBsaW5rQ2xhc3NlcygpIHsKICAgICAgdmFyIGNsYXNzZXMgPSBbXTsKCiAgICAgIGlmICh0aGlzLm5vZGUuaXNGb2xkZXIoKSkgewogICAgICAgIGNsYXNzZXMucHVzaCgndmlvbGV0LWNvbG9yZWQnKTsKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyB0aGlzLm5vZGUudHlwZSA9PT0gbm9kZVR5cGUuRklMRQogICAgICAgIGNsYXNzZXMucHVzaCgnbWFnZW50YS1jb2xvcmVkJyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBjbGFzc2VzOwogICAgfSwKCiAgICAvKioKICAgICAqIF9hIGhlbHBmdWwgaGludCB0byBzaG93IHdoZW4gdGhlIGxpbmsgaXMgaG92ZXJlZF8KICAgICAqLwogICAgZGVzY3JpcHRpb246IGZ1bmN0aW9uIGRlc2NyaXB0aW9uKCkgewogICAgICBpZiAodGhpcy5ub2RlLmlzRm9sZGVyKCkpIHsKICAgICAgICByZXR1cm4gIkVudGVyIGZvbGRlciAnIi5jb25jYXQodGhpcy5ub2RlLm5hbWUsICInLiIpOwogICAgICB9IGVsc2UgewogICAgICAgIC8vIHRoaXMubm9kZS50eXBlID09PSBub2RlVHlwZS5GSUxFCiAgICAgICAgcmV0dXJuICJPcGVuIGZpbGUgJyIuY29uY2F0KHRoaXMubm9kZS5uYW1lLCAiJy4iKTsKICAgICAgfQogICAgfQogIH0sIG1hcEdldHRlcnMoJ3BvcnRmb2xpbycsIFsnYWJzb2x1dGVQYXRoVG8nXSkpLAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoewogICAgLyoqCiAgICAgKiBfcmV0cmlldmUgYW5kIGV4ZWN1dGUgdGhlIGFwcHJvcHJpYXRlIGNvbW1hbmRfCiAgICAgKi8KICAgIGV4ZWN1dGU6IGZ1bmN0aW9uIGV4ZWN1dGUoKSB7CiAgICAgIHZhciBjb21tYW5kOwoKICAgICAgaWYgKHRoaXMubm9kZS5pc0ZvbGRlcigpKSB7CiAgICAgICAgY29tbWFuZCA9ICdjZCc7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8gdGhpcy5ub2RlLnR5cGUgPT09IG5vZGVUeXBlLkZJTEUKICAgICAgICBjb21tYW5kID0gJ2NhdCc7CiAgICAgIH0KCiAgICAgIHRoaXMucnVuQ29tbWFuZCh7CiAgICAgICAgY29tbWFuZDogIiIuY29uY2F0KGNvbW1hbmQsICIgIikuY29uY2F0KHRoaXMuYWJzb2x1dGVQYXRoVG8odGhpcy5ub2RlKSkKICAgICAgfSk7CiAgICB9LAogICAgaGFuZGxlQ2xpY2s6IGZ1bmN0aW9uIGhhbmRsZUNsaWNrKCkgewogICAgICB0aGlzLmV4ZWN1dGUoKTsKICAgIH0KICB9LCBtYXBBY3Rpb25zKCdwb3J0Zm9saW8nLCBbJ3J1bkNvbW1hbmQnXSkpCn07"},{"version":3,"sources":["Link.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAsBA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AAEA,OAAA,IAAA,MAAA,+BAAA;AAEA,OAAA,SAAA,MAAA,8BAAA;AACA,OAAA,IAAA,MAAA,yBAAA;AACA,OAAA,KAAA,MAAA,0BAAA;AACA,OAAA,GAAA,MAAA,wBAAA;AACA,OAAA,QAAA,MAAA,6BAAA;AAEA;;;;;AAIA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,SAAA,EAAA,SADA;AAEA,QAAA,IAAA,EAAA,IAFA;AAGA,QAAA,KAAA,EAAA,KAHA;AAIA,QAAA,GAAA,EAAA,GAJA;AAKA,QAAA,QAAA,EAAA;AALA;AADA,KAAA;AASA,GAfA;AAgBA,EAAA,KAAA,EAAA;AACA;;;AAGA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KAJA;;AAQA;;;AAGA,IAAA,EAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AAXA,GAhBA;AA+BA,EAAA,QAAA;AACA;;;AAGA,IAAA,WAJA,yBAIA;AACA,UAAA,OAAA,GAAA,EAAA;;AACA,UAAA,KAAA,IAAA,CAAA,QAAA,EAAA,EAAA;AACA,QAAA,OAAA,CAAA,IAAA,CAAA,gBAAA;AACA,OAFA,MAEA;AAAA;AACA,QAAA,OAAA,CAAA,IAAA,CAAA,iBAAA;AACA;;AACA,aAAA,OAAA;AACA,KAZA;;AAaA;;;AAGA,IAAA,WAhBA,yBAgBA;AACA,UAAA,KAAA,IAAA,CAAA,QAAA,EAAA,EAAA;AACA,uCAAA,KAAA,IAAA,CAAA,IAAA;AACA,OAFA,MAEA;AAAA;AACA,oCAAA,KAAA,IAAA,CAAA,IAAA;AACA;AACA;AAtBA,KAwBA,UAAA,CAAA,WAAA,EAAA,CACA,gBADA,CAAA,CAxBA,CA/BA;AA2DA,EAAA,OAAA;AACA;;;AAGA,IAAA,OAJA,qBAIA;AACA,UAAA,OAAA;;AACA,UAAA,KAAA,IAAA,CAAA,QAAA,EAAA,EAAA;AACA,QAAA,OAAA,GAAA,IAAA;AACA,OAFA,MAEA;AAAA;AACA,QAAA,OAAA,GAAA,KAAA;AACA;;AACA,WAAA,UAAA,CAAA;AACA,QAAA,OAAA,YAAA,OAAA,cAAA,KAAA,cAAA,CAAA,KAAA,IAAA,CAAA;AADA,OAAA;AAGA,KAdA;AAgBA,IAAA,WAhBA,yBAgBA;AACA,WAAA,OAAA;AACA;AAlBA,KAoBA,UAAA,CAAA,WAAA,EAAA,CACA,YADA,CAAA,CApBA;AA3DA,CAAA","sourcesContent":["<template>\n  <span class=\"link\" :class=\"linkClasses\">\n    <a\n      href=\"#\"\n      :title=\"description\"\n      @click.prevent=\"handleClick\">\n      <template v-if=\"as\">\n        <span :title=\"node.name\">{{ as }}</span>\n      </template>\n      <template v-else>\n        <Icon\n          v-if=\"node.icon\"\n          :icon=\"node.icon\"\n          :path=\"icons[node.icon]\"\n          is-inline/>\n        {{ node.name }}\n      </template>\n    </a>\n  </span>\n</template>\n\n<script>\n  import { mapActions, mapGetters } from 'vuex'\n\n  import Icon from '@/components/common/icon/Icon'\n\n  import briefcase from '@/assets/icons/briefcase.svg'\n  import cube from '@/assets/icons/cube.svg'\n  import flash from '@/assets/icons/flash.svg'\n  import git from '@/assets/icons/git.svg'\n  import document from '@/assets/icons/document.svg'\n\n  /**\n   * This block represents a link to a node in the file system, be it a folder\n   * or a file, which can be clicked to either enter or open it respectively.\n   */\n  export default {\n    name: 'Link',\n    components: {\n      Icon\n    },\n    data () {\n      return {\n        icons: {\n          briefcase,\n          cube,\n          flash,\n          git,\n          document\n        }\n      }\n    },\n    props: {\n      /**\n       * _the node to generate the link for_\n       */\n      node: {\n        type: Object,\n        required: true\n      },\n      /**\n       * _alternate text to display in place of the node name_\n       */\n      as: {\n        type: String\n      }\n    },\n    computed: {\n      /**\n       * _the classes to apply to the link_\n       */\n      linkClasses () {\n        const classes = []\n        if (this.node.isFolder()) {\n          classes.push('violet-colored')\n        } else { // this.node.type === nodeType.FILE\n          classes.push('magenta-colored')\n        }\n        return classes\n      },\n      /**\n       * _a helpful hint to show when the link is hovered_\n       */\n      description () {\n        if (this.node.isFolder()) {\n          return `Enter folder '${this.node.name}'.`\n        } else { // this.node.type === nodeType.FILE\n          return `Open file '${this.node.name}'.`\n        }\n      },\n\n      ...mapGetters('portfolio', [\n        'absolutePathTo'\n      ])\n    },\n    methods: {\n      /**\n       * _retrieve and execute the appropriate command_\n       */\n      execute () {\n        let command\n        if (this.node.isFolder()) {\n          command = 'cd'\n        } else { // this.node.type === nodeType.FILE\n          command = 'cat'\n        }\n        this.runCommand({\n          command: `${command} ${this.absolutePathTo(this.node)}`\n        })\n      },\n\n      handleClick () {\n        this.execute()\n      },\n\n      ...mapActions('portfolio', [\n        'runCommand'\n      ])\n    }\n  }\n</script>\n\n<style scoped lang=\"scss\" src=\"./Link.scss\"/>\n"],"sourceRoot":"src/components/portfolio/link"}]}