{"remainingRequest":"/Users/msfew/portfolio/node_modules/babel-loader/lib/index.js!/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/msfew/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/msfew/portfolio/src/templates/portfolio/commands/Concatenate.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/msfew/portfolio/src/templates/portfolio/commands/Concatenate.vue","mtime":1615276825508},{"path":"/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi50aW1lcnMiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvbXNmZXcvcG9ydGZvbGlvL25vZGVfbW9kdWxlcy9AdnVlL2JhYmVsLXByZXNldC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgcHJpc20gZnJvbSAicHJpc21qcy9jb21wb25lbnRzL3ByaXNtLWNvcmUiOwppbXBvcnQgInByaXNtanMvY29tcG9uZW50cy9wcmlzbS1jbGlrZSI7CmltcG9ydCAicHJpc21qcy9jb21wb25lbnRzL3ByaXNtLWphdmEiOwppbXBvcnQgInByaXNtanMvY29tcG9uZW50cy9wcmlzbS1qYXZhc2NyaXB0IjsKaW1wb3J0ICJwcmlzbWpzL2NvbXBvbmVudHMvcHJpc20tbGF0ZXgiOwppbXBvcnQgInByaXNtanMvY29tcG9uZW50cy9wcmlzbS1tYXJrdXAiOwppbXBvcnQgInByaXNtanMvY29tcG9uZW50cy9wcmlzbS1tYXJrZG93biI7CmltcG9ydCAicHJpc21qcy9jb21wb25lbnRzL3ByaXNtLXB5dGhvbiI7CmltcG9ydCAicHJpc21qcy9jb21wb25lbnRzL3ByaXNtLXJlc3QiOwppbXBvcnQgInByaXNtanMvY29tcG9uZW50cy9wcmlzbS1jc3MiOwppbXBvcnQgInByaXNtanMvY29tcG9uZW50cy9wcmlzbS1zY3NzIjsKaW1wb3J0ICJwcmlzbWpzL2NvbXBvbmVudHMvcHJpc20teWFtbCI7CmltcG9ydCAicHJpc21qcy9wbHVnaW5zL2F1dG9saW5rZXIvcHJpc20tYXV0b2xpbmtlci5jc3MiOwppbXBvcnQgInByaXNtanMvcGx1Z2lucy9hdXRvbGlua2VyL3ByaXNtLWF1dG9saW5rZXIiOwppbXBvcnQgInByaXNtanMvdGhlbWVzL3ByaXNtLXNvbGFyaXplZGxpZ2h0LmNzcyI7CmltcG9ydCB7IG1hcEdldHRlcnMsIG1hcE11dGF0aW9ucyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgU3Bpbm5lciBmcm9tICdAL2NvbXBvbmVudHMvcG9ydGZvbGlvL3NwaW5uZXIvU3Bpbm5lcic7CmltcG9ydCBMaW5rIGZyb20gJ0AvY29tcG9uZW50cy9wb3J0Zm9saW8vbGluay9MaW5rJzsKaW1wb3J0IGFyZ3VtZW50ZWQgZnJvbSAnQC9taXhpbnMvYXJndW1lbnRlZCc7CmltcG9ydCAnQC9zdHlsZXMvdXRpbHMvcHJpc20uc2Nzcyc7Ci8qKgogKiBUaGlzIGNvbW1hbmQgcHJpbnRzIHRoZSBjb250ZW50cyBvZiBhIGZpbGUgJ2ZpbGVuYW1lJy4KICovCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0NvbmNhdGVuYXRlJywKICBtaXhpbnM6IFthcmd1bWVudGVkXSwKICBjb21wb25lbnRzOiB7CiAgICBTcGlubmVyOiBTcGlubmVyLAogICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHZ1ZS9uby11bnVzZWQtY29tcG9uZW50cwogICAgTGluazogTGluawogIH0sCiAgYXJnU3BlYzogewogICAgYXJnczogW3sKICAgICAgbmFtZTogJ2ZpbGVuYW1lJywKICAgICAgdHlwZTogU3RyaW5nLAogICAgICAiZGVmYXVsdCI6ICdWQU5JVFknCiAgICB9XSwKICAgIGt3YXJnczogW10KICB9LAogIHByb3BzOiB7CiAgICAvKioKICAgICAqIF90aGUgYXJndW1lbnRzIHBhc3NlZCB0byB0aGUgY29tbWFuZF8KICAgICAqLwogICAgYXJndjogewogICAgICB0eXBlOiBBcnJheQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvbnRlbnRzOiBudWxsCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoewogICAgLyoqCiAgICAgKiBfdGhlIGZpbGUgd2hvc2UgY29udGVudHMgbXVzdCBiZSBkaXNwbGF5ZWRfCiAgICAgKi8KICAgIGZpbGU6IGZ1bmN0aW9uIGZpbGUoKSB7CiAgICAgIGlmICh0aGlzLmFyZ3MuZmlsZW5hbWUgPT09ICdWQU5JVFknIHx8IHRoaXMuYXJncy5maWxlbmFtZSA9PT0gJ0UnKSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHRoaXMubm9kZUxvY2F0ZWRBdCh0aGlzLmFyZ3MuZmlsZW5hbWUpOwogICAgICB9CiAgICB9LAoKICAgIC8qKgogICAgICogX3doZXRoZXIgYSBmaWxlIG1hdGNoaW5nIHRoZSBwYXRoIHdhcyBmb3VuZF8KICAgICAqLwogICAgaXNGb3VuZDogZnVuY3Rpb24gaXNGb3VuZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuYXJncy5maWxlbmFtZSA9PT0gJ1ZBTklUWScgfHwgdGhpcy5hcmdzLmZpbGVuYW1lID09PSAnRScgfHwgdGhpcy5ub2RlICYmIHRoaXMubm9kZS5pc0ZpbGUoKTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBfdGhlIGltcG9ydGVkIEhUTUwgb2YgdGhlIGZpbGVfCiAgICAgKi8KICAgIHBhdGg6IGZ1bmN0aW9uIHBhdGgoKSB7CiAgICAgIHZhciBmaWxlUGF0aDsKCiAgICAgIGlmICh0aGlzLmFyZ3MuZmlsZW5hbWUgPT09ICdWQU5JVFknKSB7CiAgICAgICAgZmlsZVBhdGggPSAndmFuaXR5X2NhcmQuY29udGVudC5odG1sJzsKICAgICAgfSBlbHNlIGlmICh0aGlzLmFyZ3MuZmlsZW5hbWUgPT09ICdFJykgewogICAgICAgIGZpbGVQYXRoID0gJ2UuY29udGVudC5odG1sJzsKICAgICAgfSBlbHNlIHsKICAgICAgICB2YXIgZGlyTmFtZSA9IHRoaXMubm9kZS5wYXJlbnQubmFtZTsKICAgICAgICB2YXIgZmlsZU5hbWUgPSB0aGlzLm5vZGUubmFtZTsKICAgICAgICBmaWxlUGF0aCA9ICIiLmNvbmNhdChkaXJOYW1lLCAiLyIpLmNvbmNhdChmaWxlTmFtZSwgIi5jb250ZW50Lmh0bWwiKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHJlcXVpcmUoIkAvYXNzZXRzL2NvbnRlbnQvIi5jb25jYXQoZmlsZVBhdGgpKTsKICAgIH0KICB9LCBtYXBHZXR0ZXJzKCdwb3J0Zm9saW8nLCBbJ25vZGVMb2NhdGVkQXQnXSkpLAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoewogICAgc3RvcFByb2Nlc3Npbmc6IGZ1bmN0aW9uIHN0b3BQcm9jZXNzaW5nKHN0YXRlKSB7CiAgICAgIGlmIChzdGF0ZSA9PT0gJ0ZBSUwnKSB7CiAgICAgICAgdGhpcy5jb250ZW50cyA9ICc8ZGl2PkFuIHVuZXhwZWN0ZWQgZXJyb3Igb2NjdXJyZWQuPC9kaXY+JzsKICAgICAgfQoKICAgICAgdGhpcy5zZXRJc1Byb2Nlc3NpbmcoewogICAgICAgIGlzUHJvY2Vzc2luZzogZmFsc2UKICAgICAgfSk7CiAgICB9LAogICAgbG9hZENvbnRlbnQ6IGZ1bmN0aW9uIGxvYWRDb250ZW50KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdHJ5IHsKICAgICAgICB2YXIgcGF0aCA9IHRoaXMucGF0aDsKICAgICAgICBheGlvcy5nZXQocGF0aCwgewogICAgICAgICAgcmVzcG9uc2VUeXBlOiAndGV4dCcKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIF90aGlzLmNvbnRlbnRzID0gcmVzcG9uc2UuZGF0YTsKCiAgICAgICAgICAgIF90aGlzLiRuZXh0VGljayhfdGhpcy5mb3JtYXRPdXRwdXQpOwogICAgICAgICAgfSwgMTAwMCk7CiAgICAgICAgfSlbImNhdGNoIl0oZnVuY3Rpb24gKGVycikgewogICAgICAgICAgY29uc29sZS5sb2coJ0ZBSUwnKTsKICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTsKCiAgICAgICAgICBfdGhpcy5zdG9wUHJvY2Vzc2luZygnRkFJTCcpOwogICAgICAgIH0pOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIHRoaXMuc3RvcFByb2Nlc3NpbmcoJ0ZBSUwnKTsKICAgICAgfQogICAgfSwKICAgIGZvcm1hdE91dHB1dDogZnVuY3Rpb24gZm9ybWF0T3V0cHV0KCkgewogICAgICBwcmlzbS5oaWdobGlnaHRBbGwoKTsKICAgICAgdGhpcy5zdG9wUHJvY2Vzc2luZygnUEFTUycpOwogICAgfQogIH0sIG1hcE11dGF0aW9ucygncG9ydGZvbGlvJywgWydzZXRJc1Byb2Nlc3NpbmcnXSkpLAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLm5vZGUgPSB0aGlzLmZpbGU7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgaWYgKHRoaXMuaXNGb3VuZCkgewogICAgICB0aGlzLmxvYWRDb250ZW50KCk7CiAgICB9IGVsc2UgewogICAgICB0aGlzLnN0b3BQcm9jZXNzaW5nKCdGQUlMJyk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Concatenate.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"cat\">\n    <template v-if=\"isFound\">\n      <div v-if=\"contents\" v-html=\"contents\"/>\n      <span\n        v-else\n        class=\"magenta-colored\">\n        <Spinner/>\n        Loadingâ€¦\n      </span>\n    </template>\n\n    <template v-else>\n      <strong>{{ args.filename }}</strong> is not a valid file.\n    </template>\n  </div>\n</template>\n\n<script>\n  import axios from 'axios'\n  import prism from 'prismjs'\n\n  import { mapGetters, mapMutations } from 'vuex'\n\n  import Spinner from '@/components/portfolio/spinner/Spinner'\n  import Link from '@/components/portfolio/link/Link'\n\n  import argumented from '@/mixins/argumented'\n\n  import '@/styles/utils/prism.scss'\n\n  /**\n   * This command prints the contents of a file 'filename'.\n   */\n  export default {\n    name: 'Concatenate',\n    mixins: [\n      argumented\n    ],\n    components: {\n      Spinner,\n      // eslint-disable-next-line vue/no-unused-components\n      Link\n    },\n    argSpec: {\n      args: [\n        {\n          name: 'filename',\n          type: String,\n          default: 'VANITY'\n        }\n      ],\n      kwargs: []\n    },\n    props: {\n      /**\n       * _the arguments passed to the command_\n       */\n      argv: {\n        type: Array\n      }\n    },\n    data () {\n      return {\n        contents: null\n      }\n    },\n    computed: {\n      /**\n       * _the file whose contents must be displayed_\n       */\n      file () {\n        if (this.args.filename === 'VANITY' || this.args.filename === 'E') {\n          return null\n        } else {\n          return this.nodeLocatedAt(this.args.filename)\n        }\n      },\n      /**\n       * _whether a file matching the path was found_\n       */\n      isFound () {\n        return this.args.filename === 'VANITY' ||\n          this.args.filename === 'E' ||\n          (this.node && this.node.isFile())\n      },\n      /**\n       * _the imported HTML of the file_\n       */\n      path () {\n        let filePath\n        if (this.args.filename === 'VANITY') {\n          filePath = 'vanity_card.content.html'\n        } else if (this.args.filename === 'E') {\n          filePath = 'e.content.html'\n        } else {\n          const dirName = this.node.parent.name\n          const fileName = this.node.name\n          filePath = `${dirName}/${fileName}.content.html`\n        }\n        return require(`@/assets/content/${filePath}`)\n      },\n\n      ...mapGetters('portfolio', [\n        'nodeLocatedAt'\n      ])\n    },\n    methods: {\n      stopProcessing (state) {\n        if (state === 'FAIL') {\n          this.contents = '<div>An unexpected error occurred.</div>'\n        }\n        this.setIsProcessing({\n          isProcessing: false\n        })\n      },\n      loadContent () {\n        try {\n          const path = this.path\n          axios\n            .get(path, {\n              responseType: 'text'\n            })\n            .then(response => {\n              setTimeout(() => {\n                this.contents = response.data\n\n                this.$nextTick(this.formatOutput)\n              }, 1000)\n            })\n            .catch(err => {\n              console.log('FAIL')\n              console.error(err)\n              this.stopProcessing('FAIL')\n            })\n        } catch (error) {\n          this.stopProcessing('FAIL')\n        }\n      },\n      formatOutput () {\n        prism.highlightAll()\n        this.stopProcessing('PASS')\n      },\n\n      ...mapMutations('portfolio', [\n        'setIsProcessing'\n      ])\n    },\n    created () {\n      this.node = this.file\n    },\n    mounted () {\n      if (this.isFound) {\n        this.loadContent()\n      } else {\n        this.stopProcessing('FAIL')\n      }\n    }\n  }\n</script>\n\n<style scoped lang=\"scss\">\n  .cat {\n    ::v-deep {\n      @import '~@/styles/utils/prism';\n    }\n  }\n</style>\n"],"sourceRoot":"src/templates/portfolio/commands"}]}