{"remainingRequest":"/Users/msfew/portfolio/node_modules/babel-loader/lib/index.js!/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/msfew/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/msfew/portfolio/src/templates/home/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/msfew/portfolio/src/templates/home/Home.vue","mtime":1617939276000},{"path":"/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnRpbWVycyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBHcmlkIGZyb20gJ0AvY29tcG9uZW50cy9sYXlvdXQvZ3JpZC9HcmlkJzsKaW1wb3J0IFNwaW5uZXIgZnJvbSAnQC9jb21wb25lbnRzL2NvbW1vbi9zcGlubmVyL1NwaW5uZXInOwppbXBvcnQgS2FvbW9qaSBmcm9tICdAL2NvbXBvbmVudHMvaG9tZS9rYW9tb2ppL0thb21vamknOwppbXBvcnQgTWVtb2ppIGZyb20gJ0AvY29tcG9uZW50cy9ob21lL21lbW9qaS9NZW1vamknOwppbXBvcnQgUm9sZSBmcm9tICdAL2NvbXBvbmVudHMvaG9tZS9yb2xlL1JvbGUnOwppbXBvcnQgU2Nyb2xsIGZyb20gJ0AvY29tcG9uZW50cy9ob21lL3Njcm9sbC9TY3JvbGwnOwppbXBvcnQgU2l0ZVRpdGxlIGZyb20gJ0AvY29tcG9uZW50cy9ob21lL3NpdGVfdGl0bGUvU2l0ZVRpdGxlJzsKaW1wb3J0IFNvdXJjZSBmcm9tICdAL2NvbXBvbmVudHMvaG9tZS9zb3VyY2UvU291cmNlJzsKaW1wb3J0IFdvcmsgZnJvbSAnQC9jb21wb25lbnRzL2hvbWUvd29yay9Xb3JrJzsKaW1wb3J0IGRlc2NyaXB0aW9ucyBmcm9tICdAL2RhdGEvZGVzY3JpcHRpb25zLmpzb24nOwovKioKICogVGhpcyBwYWdlIGlzIHRoZSBsYW5kaW5nIHBhZ2UgZm9yIHRoZSBwb3J0Zm9saW8uIEFsbCBpbXByb3ZlbWVudHMgc3RhcnQKICogaGVyZSwgYW5kIGl0IGlzIHBvc3NpYmxlIHRoYXQgdGhleSBtaWdodCBub3QgcHJvcGFnYXRlIHRvIHRoZSBvdGhlciBwYWdlcy4KICovCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0hvbWUnLAogIGNvbXBvbmVudHM6IHsKICAgIEdyaWQ6IEdyaWQsCiAgICBTcGlubmVyOiBTcGlubmVyLAogICAgS2FvbW9qaTogS2FvbW9qaSwKICAgIE1lbW9qaTogTWVtb2ppLAogICAgUm9sZTogUm9sZSwKICAgIFNjcm9sbDogU2Nyb2xsLAogICAgU2l0ZVRpdGxlOiBTaXRlVGl0bGUsCiAgICBTb3VyY2U6IFNvdXJjZSwKICAgIFdvcms6IFdvcmsKICB9LAogIG1ldGFJbmZvOiB7CiAgICB0aXRsZTogJ3dlYiBkZXYgJiBtb3JlLi4uJywKICAgIG1ldGE6IFsnZGVzY3JpcHRpb24nLCAnb2c6ZGVzY3JpcHRpb24nXS5tYXAoZnVuY3Rpb24gKG5hbWUpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgIGNvbnRlbnQ6IGRlc2NyaXB0aW9ucy5ob21lCiAgICAgIH07CiAgICB9KQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGluZGV4OiAwLAogICAgICBpbnRlcnZhbDogOCwKICAgICAgLy8gc2Vjb25kcwogICAgICB1cGRhdGVMb29wZXI6IG51bGwsCiAgICAgIGlzUG9ydGZvbGlvTGlua0ZvY3VzZWQ6IGZhbHNlLAogICAgICB0b3RhbEltYWdlQ291bnQ6IHRoaXMuJHJvbGVzLmxlbmd0aCwKICAgICAgbG9hZGVkSW1hZ2VDb3VudDogMCwKICAgICAgdHJhbnNpdGlvblN1ZmZpeDogJycKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgLyoqCiAgICAgKiBHZXQgd2hldGhlciBhbGwgaW1hZ2VzIHJlcXVpcmVkIGJ5IHRoZSBtZW1vamkgdGlja2VyIGhhdmUgYmVlbgogICAgICogZmV0Y2hlZCBhbmQgY2FjaGVkIGZvciBmYXN0ZXIgcmVuZGVyaW5nLgogICAgICoKICAgICAqIEByZXR1cm5zIHtib29sZWFufSB3aGV0aGVyIGFsbCBpbWFnZXMgaGF2ZSBiZWVuIGxvYWRlZAogICAgICovCiAgICBhcmVJbWFnZXNMb2FkZWQ6IGZ1bmN0aW9uIGFyZUltYWdlc0xvYWRlZCgpIHsKICAgICAgcmV0dXJuIHRoaXMubG9hZGVkSW1hZ2VDb3VudCA+PSB0aGlzLnRvdGFsSW1hZ2VDb3VudDsKICAgIH0sCgogICAgLyoqCiAgICAgKiBHZXQgdGhlIG5hbWUgb2YgdGhlIHRyYW5zaXRpb24gdG8gYXBwbHkgb24gdGhlIGhvcml6b250YWwgdGlja2Vycy4KICAgICAqIEByZXR1cm4ge3N0cmluZ30gdGhlIG5hbWUgb2YgdGhlIGhvcml6b250YWwgdGlja2VyIHRyYW5zaXRpb24KICAgICAqLwogICAgaG9yaXpvbnRhbFRyYW5zaXRpb25OYW1lOiBmdW5jdGlvbiBob3Jpem9udGFsVHJhbnNpdGlvbk5hbWUoKSB7CiAgICAgIHJldHVybiAiZmxpcC1ob3Jpem9udGFsIi5jb25jYXQodGhpcy50cmFuc2l0aW9uU3VmZml4KTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBHZXQgdGhlIG5hbWUgb2YgdGhlIHRyYW5zaXRpb24gdG8gYXBwbHkgb24gdGhlIHZlcnRpY2FsIHRpY2tlcnMuCiAgICAgKiBAcmV0dXJuIHtzdHJpbmd9IHRoZSBuYW1lIG9mIHRoZSB2ZXJ0aWNhbCB0aWNrZXIgdHJhbnNpdGlvbgogICAgICovCiAgICB2ZXJ0aWNhbFRyYW5zaXRpb25OYW1lOiBmdW5jdGlvbiB2ZXJ0aWNhbFRyYW5zaXRpb25OYW1lKCkgewogICAgICByZXR1cm4gImZsaXAtdmVydGljYWwiLmNvbmNhdCh0aGlzLnRyYW5zaXRpb25TdWZmaXgpOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIC8qKgogICAgICogRGV0ZXJtaW5lIHRoZSB0cmFuc2l0aW9uIG5hbWUgYmFzZWQgb24gd2hldGhlciB0aGUgYW5pbWF0aW9uIGlzIGdvaW5nCiAgICAgKiBpbiB0aGUgZm9yd2FyZCBvciBiYWNrd2FyZCBkaXJlY3Rpb24uCiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdG8gLSB0aGUgbmV3IHZhbHVlIG9mIHRoZSBpbmRleAogICAgICogQHBhcmFtIHtzdHJpbmd9IGZyb20gLSB0aGUgb2xkIHZhbHVlIG9mIHRoZSBpbmRleAogICAgICovCiAgICBpbmRleDogZnVuY3Rpb24gaW5kZXgodG8sIGZyb20pIHsKICAgICAgaWYgKHRvID4gZnJvbSkgewogICAgICAgIC8vIEFuaW1hdGlvbiBpcyBtb3ZpbmcgZm9yd2FyZAogICAgICAgIHRoaXMudHJhbnNpdGlvblN1ZmZpeCA9ICcnOwogICAgICB9IGVsc2UgewogICAgICAgIC8vIEFuaW1hdGlvbiBpcyBtb3ZpbmcgYmFja3dhcmQKICAgICAgICB0aGlzLnRyYW5zaXRpb25TdWZmaXggPSAnLXJldic7CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8qKgogICAgICogU3RhcnQgdGhlIGxvb3AgdGhhdCBjaGFuZ2VzIG1lbW9qaSBhbmQgcm9sZSBwZXJpb2RpY2FsbHkuCiAgICAgKi8KICAgIHN0YXJ0TG9vcGluZzogZnVuY3Rpb24gc3RhcnRMb29waW5nKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5zdG9wTG9vcGluZygpOwogICAgICB0aGlzLnVwZGF0ZUxvb3BlciA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5pbmRleCsrOwogICAgICB9LCB0aGlzLmludGVydmFsICogMTAwMCk7CiAgICB9LAoKICAgIC8qKgogICAgICogU3RvcCB0aGUgbG9vcCB0aGF0IGNoYW5nZXMgbWVtb2ppIGFuZCByb2xlIHBlcmlvZGljYWxseS4KICAgICAqLwogICAgc3RvcExvb3Bpbmc6IGZ1bmN0aW9uIHN0b3BMb29waW5nKCkgewogICAgICBjbGVhckludGVydmFsKHRoaXMudXBkYXRlTG9vcGVyKTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBDaGFuZ2UgdGhlIGluZGV4IGJhc2VkIG9uIHdoaWNoIHNjcm9sbGluZyBidXR0b24gd2FzIGNsaWNrZWQuCiAgICAgKiBAcGFyYW0ge251bWJlcn0gZGVsdGEgLSB0aGUgdmFsdWUgYnkgd2hpY2ggdG8gY2hhbmdlIHRoZSB0aWNrZXJzCiAgICAgKi8KICAgIHNjcm9sbFRpY2tlcnM6IGZ1bmN0aW9uIHNjcm9sbFRpY2tlcnMoZGVsdGEpIHsKICAgICAgdGhpcy5zdG9wTG9vcGluZygpOwogICAgICB0aGlzLmluZGV4ICs9IGRlbHRhOwogICAgICB0aGlzLnN0YXJ0TG9vcGluZygpOwogICAgfSwKCiAgICAvKioKICAgICAqIFNldCB0aGUgbWVtb2ppLCByb2xlIGFuZCB3b3JrIHRpY2tlcnMgdG8gdGhlaXIgZm9jdXNlZCBzdGF0ZXMgYW5kIHN0b3AKICAgICAqIHRoZSB0aWNraW5nIGFuaW1hdGlvbi4KICAgICAqLwogICAgZm9jdXNQb3J0Zm9saW9MaW5rOiBmdW5jdGlvbiBmb2N1c1BvcnRmb2xpb0xpbmsoKSB7CiAgICAgIHRoaXMuc3RvcExvb3BpbmcoKTsKICAgICAgdGhpcy5pc1BvcnRmb2xpb0xpbmtGb2N1c2VkID0gdHJ1ZTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBTZXQgdGhlIG1lbW9qaSwgcm9sZSBhbmQgd29yayB0aWNrZXJzIHRvIHRoZWlyIGJsdXJyZWQgc3RhdGVzIGFuZCBzdGFydAogICAgICogdGhlIHRpY2tpbmcgYW5pbWF0aW9uLgogICAgICovCiAgICBibHVyUG9ydGZvbGlvTGluazogZnVuY3Rpb24gYmx1clBvcnRmb2xpb0xpbmsoKSB7CiAgICAgIHRoaXMuaXNQb3J0Zm9saW9MaW5rRm9jdXNlZCA9IGZhbHNlOwogICAgICB0aGlzLnN0YXJ0TG9vcGluZygpOwogICAgfSwKCiAgICAvKioKICAgICAqIExvYWQgbWVtb2ppIGZvciBhbGwgcm9sZXMgYnkgc291cmNpbmcgdGhlbSBpbnRvIGFuIGludmlzaWJsZSBJbWFnZQogICAgICogZWxlbWVudC4KICAgICAqLwogICAgcHJlbG9hZEltYWdlczogZnVuY3Rpb24gcHJlbG9hZEltYWdlcygpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLiRyb2xlcy5mb3JFYWNoKGZ1bmN0aW9uIChyb2xlKSB7CiAgICAgICAgdmFyIGltYWdlID0gbmV3IEltYWdlKCk7CiAgICAgICAgaW1hZ2Uuc3JjID0gcmVxdWlyZSgiQC9hc3NldHMvbWVtb2ppLyIuY29uY2F0KHJvbGUsICIucG5nIikpOwoKICAgICAgICBpbWFnZS5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpczIubG9hZGVkSW1hZ2VDb3VudCsrOwogICAgICAgIH07CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZUFmdGVyRW50ZXI6IGZ1bmN0aW9uIGhhbmRsZUFmdGVyRW50ZXIoKSB7CiAgICAgIGlmICh0aGlzLmFyZUltYWdlc0xvYWRlZCkgewogICAgICAgIHRoaXMuc3RhcnRMb29waW5nKCk7CiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnByZWxvYWRJbWFnZXMoKTsKICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICB0aGlzLnN0b3BMb29waW5nKCk7CiAgfQp9Ow=="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <main id=\"home\">\n    <transition\n      name=\"fade\"\n      mode=\"out-in\"\n      appear\n      @after-enter=\"handleAfterEnter\">\n      <section\n        v-if=\"areImagesLoaded\"\n        key=\"loaded\">\n        <Grid class=\"home-grid\">\n          <div class=\"left\">\n            <div class=\"content\">\n              <RouterLink\n                class=\"memoji-link\"\n                tabindex=\"-1\"\n                :to=\"{name: 'portfolio'}\"\n                @mouseenter.native=\"focusPortfolioLink\"\n                @mouseleave.native=\"blurPortfolioLink\">\n                <transition\n                  :name=\"horizontalTransitionName\"\n                  mode=\"out-in\"\n                  appear>\n                  <Memoji\n                    :key=\"index\"\n                    :index=\"index\"\n                    :color=\"solarizedColor(index)\"\n                    :is-focused=\"isPortfolioLinkFocused\"/>\n                </transition>\n              </RouterLink>\n            </div>\n          </div>\n\n          <div class=\"right\">\n            <div class=\"content\">\n              Hello there! I am\n              <SiteTitle/>\n              and so nice to meet u.\n\n              <p class=\"roles\">\n                I am\n                <RouterLink\n                  class=\"role-link\"\n                  tabindex=\"0\"\n                  :to=\"{name: 'portfolio'}\"\n                  title=\"See my portfolio.\"\n                  @mouseenter.native=\"focusPortfolioLink\"\n                  @mouseleave.native=\"blurPortfolioLink\"\n                  @focus.native=\"focusPortfolioLink\"\n                  @blur.native=\"blurPortfolioLink\">\n                  <transition\n                    :name=\"verticalTransitionName\"\n                    mode=\"out-in\"\n                    appear>\n                    <Role\n                      :key=\"index\"\n                      :index=\"index\"\n                      :color=\"solarizedColor(index)\"\n                      :is-focused=\"isPortfolioLinkFocused\"/>\n                  </transition>\n                </RouterLink>\n              </p>\n\n              <p>\n                With utmost meticulousness and love for the craft,\n                <br/>\n                I\n                <transition\n                  :name=\"verticalTransitionName\"\n                  mode=\"out-in\"\n                  appear>\n                  <Work\n                    :key=\"index\"\n                    :index=\"index\"\n                    :is-focused=\"isPortfolioLinkFocused\"/>\n                </transition>\n                <br/>\n                <span\n                  class=\"secondary-colored\"\n                  title=\"Such as movies, music and memes!\">\n                  and also enjoy other things.\n                </span>\n              </p>\n            </div>\n          </div>\n\n          <Scroll\n            v-for=\"direction in ['previous', 'next']\"\n            :key=\"direction\"\n            class=\"scroll\"\n            :class=\"direction\"\n            :direction=\"direction\"\n            :color=\"solarizedColor(index)\"\n            @scroll=\"scrollTickers\"/>\n        </Grid>\n      </section>\n\n      <section\n        v-else\n        key=\"loading\"\n        class=\"centered\">\n        <Spinner color=\"red\"/>\n      </section>\n    </transition>\n\n    <footer v-show=\"areImagesLoaded\">\n      <Source color=\"cyan\"/>\n      <Kaomoji/>\n    </footer>\n  </main>\n</template>\n\n<script>\n  import Grid from '@/components/layout/grid/Grid'\n\n  import Spinner from '@/components/common/spinner/Spinner'\n\n  import Kaomoji from '@/components/home/kaomoji/Kaomoji'\n  import Memoji from '@/components/home/memoji/Memoji'\n  import Role from '@/components/home/role/Role'\n  import Scroll from '@/components/home/scroll/Scroll'\n  import SiteTitle from '@/components/home/site_title/SiteTitle'\n  import Source from '@/components/home/source/Source'\n  import Work from '@/components/home/work/Work'\n  import descriptions from '@/data/descriptions.json'\n\n  /**\n   * This page is the landing page for the portfolio. All improvements start\n   * here, and it is possible that they might not propagate to the other pages.\n   */\n  export default {\n    name: 'Home',\n    components: {\n      Grid,\n\n      Spinner,\n\n      Kaomoji,\n      Memoji,\n      Role,\n      Scroll,\n      SiteTitle,\n      Source,\n      Work\n    },\n    metaInfo: {\n      title: 'web dev & more...',\n      meta: ['description', 'og:description'].map(name => ({\n        name,\n        content: descriptions.home\n      }))\n    },\n    data () {\n      return {\n        index: 0,\n        interval: 8, // seconds\n        updateLooper: null,\n        isPortfolioLinkFocused: false,\n\n        totalImageCount: this.$roles.length,\n        loadedImageCount: 0,\n\n        transitionSuffix: ''\n      }\n    },\n    computed: {\n      /**\n       * Get whether all images required by the memoji ticker have been\n       * fetched and cached for faster rendering.\n       *\n       * @returns {boolean} whether all images have been loaded\n       */\n      areImagesLoaded () {\n        return this.loadedImageCount >= this.totalImageCount\n      },\n\n      /**\n       * Get the name of the transition to apply on the horizontal tickers.\n       * @return {string} the name of the horizontal ticker transition\n       */\n      horizontalTransitionName () {\n        return `flip-horizontal${this.transitionSuffix}`\n      },\n      /**\n       * Get the name of the transition to apply on the vertical tickers.\n       * @return {string} the name of the vertical ticker transition\n       */\n      verticalTransitionName () {\n        return `flip-vertical${this.transitionSuffix}`\n      }\n    },\n    watch: {\n      /**\n       * Determine the transition name based on whether the animation is going\n       * in the forward or backward direction.\n       * @param {string} to - the new value of the index\n       * @param {string} from - the old value of the index\n       */\n      index (to, from) {\n        if (to > from) { // Animation is moving forward\n          this.transitionSuffix = ''\n        } else { // Animation is moving backward\n          this.transitionSuffix = '-rev'\n        }\n      }\n    },\n    methods: {\n      /**\n       * Start the loop that changes memoji and role periodically.\n       */\n      startLooping () {\n        this.stopLooping()\n        this.updateLooper = setInterval(() => {\n          this.index++\n        }, this.interval * 1000)\n      },\n      /**\n       * Stop the loop that changes memoji and role periodically.\n       */\n      stopLooping () {\n        clearInterval(this.updateLooper)\n      },\n      /**\n       * Change the index based on which scrolling button was clicked.\n       * @param {number} delta - the value by which to change the tickers\n       */\n      scrollTickers (delta) {\n        this.stopLooping()\n        this.index += delta\n        this.startLooping()\n      },\n\n      /**\n       * Set the memoji, role and work tickers to their focused states and stop\n       * the ticking animation.\n       */\n      focusPortfolioLink () {\n        this.stopLooping()\n        this.isPortfolioLinkFocused = true\n      },\n      /**\n       * Set the memoji, role and work tickers to their blurred states and start\n       * the ticking animation.\n       */\n      blurPortfolioLink () {\n        this.isPortfolioLinkFocused = false\n        this.startLooping()\n      },\n\n      /**\n       * Load memoji for all roles by sourcing them into an invisible Image\n       * element.\n       */\n      preloadImages () {\n        this.$roles.forEach((role) => {\n          const image = new Image()\n          image.src = require(`@/assets/memoji/${role}.png`)\n\n          image.onload = () => {\n            this.loadedImageCount++\n          }\n        })\n      },\n\n      handleAfterEnter () {\n        if (this.areImagesLoaded) {\n          this.startLooping()\n        }\n      }\n    },\n    mounted () {\n      this.preloadImages()\n    },\n    beforeDestroy () {\n      this.stopLooping()\n    }\n  }\n</script>\n\n<style scoped lang=\"scss\" src=\"./Home.scss\"/>\n"],"sourceRoot":"src/templates/home"}]}