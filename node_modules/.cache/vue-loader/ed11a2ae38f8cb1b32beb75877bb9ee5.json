{"remainingRequest":"/Users/msfew/Downloads/portfolio-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/msfew/Downloads/portfolio-master/src/templates/home/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/msfew/Downloads/portfolio-master/src/templates/home/Home.vue","mtime":1617939276000},{"path":"/Users/msfew/Downloads/portfolio-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/Downloads/portfolio-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/msfew/Downloads/portfolio-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/Downloads/portfolio-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBHcmlkIGZyb20gJ0AvY29tcG9uZW50cy9sYXlvdXQvZ3JpZC9HcmlkJwoKaW1wb3J0IFNwaW5uZXIgZnJvbSAnQC9jb21wb25lbnRzL2NvbW1vbi9zcGlubmVyL1NwaW5uZXInCgppbXBvcnQgS2FvbW9qaSBmcm9tICdAL2NvbXBvbmVudHMvaG9tZS9rYW9tb2ppL0thb21vamknCmltcG9ydCBNZW1vamkgZnJvbSAnQC9jb21wb25lbnRzL2hvbWUvbWVtb2ppL01lbW9qaScKaW1wb3J0IFJvbGUgZnJvbSAnQC9jb21wb25lbnRzL2hvbWUvcm9sZS9Sb2xlJwppbXBvcnQgU2Nyb2xsIGZyb20gJ0AvY29tcG9uZW50cy9ob21lL3Njcm9sbC9TY3JvbGwnCmltcG9ydCBTaXRlVGl0bGUgZnJvbSAnQC9jb21wb25lbnRzL2hvbWUvc2l0ZV90aXRsZS9TaXRlVGl0bGUnCmltcG9ydCBTb3VyY2UgZnJvbSAnQC9jb21wb25lbnRzL2hvbWUvc291cmNlL1NvdXJjZScKaW1wb3J0IFdvcmsgZnJvbSAnQC9jb21wb25lbnRzL2hvbWUvd29yay9Xb3JrJwppbXBvcnQgZGVzY3JpcHRpb25zIGZyb20gJ0AvZGF0YS9kZXNjcmlwdGlvbnMuanNvbicKCi8qKgogKiBUaGlzIHBhZ2UgaXMgdGhlIGxhbmRpbmcgcGFnZSBmb3IgdGhlIHBvcnRmb2xpby4gQWxsIGltcHJvdmVtZW50cyBzdGFydAogKiBoZXJlLCBhbmQgaXQgaXMgcG9zc2libGUgdGhhdCB0aGV5IG1pZ2h0IG5vdCBwcm9wYWdhdGUgdG8gdGhlIG90aGVyIHBhZ2VzLgogKi8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdIb21lJywKICBjb21wb25lbnRzOiB7CiAgICBHcmlkLAoKICAgIFNwaW5uZXIsCgogICAgS2FvbW9qaSwKICAgIE1lbW9qaSwKICAgIFJvbGUsCiAgICBTY3JvbGwsCiAgICBTaXRlVGl0bGUsCiAgICBTb3VyY2UsCiAgICBXb3JrCiAgfSwKICBtZXRhSW5mbzogewogICAgdGl0bGU6ICd3ZWIgZGV2ICYgbW9yZS4uLicsCiAgICBtZXRhOiBbJ2Rlc2NyaXB0aW9uJywgJ29nOmRlc2NyaXB0aW9uJ10ubWFwKG5hbWUgPT4gKHsKICAgICAgbmFtZSwKICAgICAgY29udGVudDogZGVzY3JpcHRpb25zLmhvbWUKICAgIH0pKQogIH0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBpbmRleDogMCwKICAgICAgaW50ZXJ2YWw6IDgsIC8vIHNlY29uZHMKICAgICAgdXBkYXRlTG9vcGVyOiBudWxsLAogICAgICBpc1BvcnRmb2xpb0xpbmtGb2N1c2VkOiBmYWxzZSwKCiAgICAgIHRvdGFsSW1hZ2VDb3VudDogdGhpcy4kcm9sZXMubGVuZ3RoLAogICAgICBsb2FkZWRJbWFnZUNvdW50OiAwLAoKICAgICAgdHJhbnNpdGlvblN1ZmZpeDogJycKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAvKioKICAgICAqIEdldCB3aGV0aGVyIGFsbCBpbWFnZXMgcmVxdWlyZWQgYnkgdGhlIG1lbW9qaSB0aWNrZXIgaGF2ZSBiZWVuCiAgICAgKiBmZXRjaGVkIGFuZCBjYWNoZWQgZm9yIGZhc3RlciByZW5kZXJpbmcuCiAgICAgKgogICAgICogQHJldHVybnMge2Jvb2xlYW59IHdoZXRoZXIgYWxsIGltYWdlcyBoYXZlIGJlZW4gbG9hZGVkCiAgICAgKi8KICAgIGFyZUltYWdlc0xvYWRlZCAoKSB7CiAgICAgIHJldHVybiB0aGlzLmxvYWRlZEltYWdlQ291bnQgPj0gdGhpcy50b3RhbEltYWdlQ291bnQKICAgIH0sCgogICAgLyoqCiAgICAgKiBHZXQgdGhlIG5hbWUgb2YgdGhlIHRyYW5zaXRpb24gdG8gYXBwbHkgb24gdGhlIGhvcml6b250YWwgdGlja2Vycy4KICAgICAqIEByZXR1cm4ge3N0cmluZ30gdGhlIG5hbWUgb2YgdGhlIGhvcml6b250YWwgdGlja2VyIHRyYW5zaXRpb24KICAgICAqLwogICAgaG9yaXpvbnRhbFRyYW5zaXRpb25OYW1lICgpIHsKICAgICAgcmV0dXJuIGBmbGlwLWhvcml6b250YWwke3RoaXMudHJhbnNpdGlvblN1ZmZpeH1gCiAgICB9LAogICAgLyoqCiAgICAgKiBHZXQgdGhlIG5hbWUgb2YgdGhlIHRyYW5zaXRpb24gdG8gYXBwbHkgb24gdGhlIHZlcnRpY2FsIHRpY2tlcnMuCiAgICAgKiBAcmV0dXJuIHtzdHJpbmd9IHRoZSBuYW1lIG9mIHRoZSB2ZXJ0aWNhbCB0aWNrZXIgdHJhbnNpdGlvbgogICAgICovCiAgICB2ZXJ0aWNhbFRyYW5zaXRpb25OYW1lICgpIHsKICAgICAgcmV0dXJuIGBmbGlwLXZlcnRpY2FsJHt0aGlzLnRyYW5zaXRpb25TdWZmaXh9YAogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIC8qKgogICAgICogRGV0ZXJtaW5lIHRoZSB0cmFuc2l0aW9uIG5hbWUgYmFzZWQgb24gd2hldGhlciB0aGUgYW5pbWF0aW9uIGlzIGdvaW5nCiAgICAgKiBpbiB0aGUgZm9yd2FyZCBvciBiYWNrd2FyZCBkaXJlY3Rpb24uCiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdG8gLSB0aGUgbmV3IHZhbHVlIG9mIHRoZSBpbmRleAogICAgICogQHBhcmFtIHtzdHJpbmd9IGZyb20gLSB0aGUgb2xkIHZhbHVlIG9mIHRoZSBpbmRleAogICAgICovCiAgICBpbmRleCAodG8sIGZyb20pIHsKICAgICAgaWYgKHRvID4gZnJvbSkgeyAvLyBBbmltYXRpb24gaXMgbW92aW5nIGZvcndhcmQKICAgICAgICB0aGlzLnRyYW5zaXRpb25TdWZmaXggPSAnJwogICAgICB9IGVsc2UgeyAvLyBBbmltYXRpb24gaXMgbW92aW5nIGJhY2t3YXJkCiAgICAgICAgdGhpcy50cmFuc2l0aW9uU3VmZml4ID0gJy1yZXYnCiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8qKgogICAgICogU3RhcnQgdGhlIGxvb3AgdGhhdCBjaGFuZ2VzIG1lbW9qaSBhbmQgcm9sZSBwZXJpb2RpY2FsbHkuCiAgICAgKi8KICAgIHN0YXJ0TG9vcGluZyAoKSB7CiAgICAgIHRoaXMuc3RvcExvb3BpbmcoKQogICAgICB0aGlzLnVwZGF0ZUxvb3BlciA9IHNldEludGVydmFsKCgpID0+IHsKICAgICAgICB0aGlzLmluZGV4KysKICAgICAgfSwgdGhpcy5pbnRlcnZhbCAqIDEwMDApCiAgICB9LAogICAgLyoqCiAgICAgKiBTdG9wIHRoZSBsb29wIHRoYXQgY2hhbmdlcyBtZW1vamkgYW5kIHJvbGUgcGVyaW9kaWNhbGx5LgogICAgICovCiAgICBzdG9wTG9vcGluZyAoKSB7CiAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy51cGRhdGVMb29wZXIpCiAgICB9LAogICAgLyoqCiAgICAgKiBDaGFuZ2UgdGhlIGluZGV4IGJhc2VkIG9uIHdoaWNoIHNjcm9sbGluZyBidXR0b24gd2FzIGNsaWNrZWQuCiAgICAgKiBAcGFyYW0ge251bWJlcn0gZGVsdGEgLSB0aGUgdmFsdWUgYnkgd2hpY2ggdG8gY2hhbmdlIHRoZSB0aWNrZXJzCiAgICAgKi8KICAgIHNjcm9sbFRpY2tlcnMgKGRlbHRhKSB7CiAgICAgIHRoaXMuc3RvcExvb3BpbmcoKQogICAgICB0aGlzLmluZGV4ICs9IGRlbHRhCiAgICAgIHRoaXMuc3RhcnRMb29waW5nKCkKICAgIH0sCgogICAgLyoqCiAgICAgKiBTZXQgdGhlIG1lbW9qaSwgcm9sZSBhbmQgd29yayB0aWNrZXJzIHRvIHRoZWlyIGZvY3VzZWQgc3RhdGVzIGFuZCBzdG9wCiAgICAgKiB0aGUgdGlja2luZyBhbmltYXRpb24uCiAgICAgKi8KICAgIGZvY3VzUG9ydGZvbGlvTGluayAoKSB7CiAgICAgIHRoaXMuc3RvcExvb3BpbmcoKQogICAgICB0aGlzLmlzUG9ydGZvbGlvTGlua0ZvY3VzZWQgPSB0cnVlCiAgICB9LAogICAgLyoqCiAgICAgKiBTZXQgdGhlIG1lbW9qaSwgcm9sZSBhbmQgd29yayB0aWNrZXJzIHRvIHRoZWlyIGJsdXJyZWQgc3RhdGVzIGFuZCBzdGFydAogICAgICogdGhlIHRpY2tpbmcgYW5pbWF0aW9uLgogICAgICovCiAgICBibHVyUG9ydGZvbGlvTGluayAoKSB7CiAgICAgIHRoaXMuaXNQb3J0Zm9saW9MaW5rRm9jdXNlZCA9IGZhbHNlCiAgICAgIHRoaXMuc3RhcnRMb29waW5nKCkKICAgIH0sCgogICAgLyoqCiAgICAgKiBMb2FkIG1lbW9qaSBmb3IgYWxsIHJvbGVzIGJ5IHNvdXJjaW5nIHRoZW0gaW50byBhbiBpbnZpc2libGUgSW1hZ2UKICAgICAqIGVsZW1lbnQuCiAgICAgKi8KICAgIHByZWxvYWRJbWFnZXMgKCkgewogICAgICB0aGlzLiRyb2xlcy5mb3JFYWNoKChyb2xlKSA9PiB7CiAgICAgICAgY29uc3QgaW1hZ2UgPSBuZXcgSW1hZ2UoKQogICAgICAgIGltYWdlLnNyYyA9IHJlcXVpcmUoYEAvYXNzZXRzL21lbW9qaS8ke3JvbGV9LnBuZ2ApCgogICAgICAgIGltYWdlLm9ubG9hZCA9ICgpID0+IHsKICAgICAgICAgIHRoaXMubG9hZGVkSW1hZ2VDb3VudCsrCiAgICAgICAgfQogICAgICB9KQogICAgfSwKCiAgICBoYW5kbGVBZnRlckVudGVyICgpIHsKICAgICAgaWYgKHRoaXMuYXJlSW1hZ2VzTG9hZGVkKSB7CiAgICAgICAgdGhpcy5zdGFydExvb3BpbmcoKQogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkICgpIHsKICAgIHRoaXMucHJlbG9hZEltYWdlcygpCiAgfSwKICBiZWZvcmVEZXN0cm95ICgpIHsKICAgIHRoaXMuc3RvcExvb3BpbmcoKQogIH0KfQo="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"Home.vue","sourceRoot":"src/templates/home","sourcesContent":["<template>\n  <main id=\"home\">\n    <transition\n      name=\"fade\"\n      mode=\"out-in\"\n      appear\n      @after-enter=\"handleAfterEnter\">\n      <section\n        v-if=\"areImagesLoaded\"\n        key=\"loaded\">\n        <Grid class=\"home-grid\">\n          <div class=\"left\">\n            <div class=\"content\">\n              <RouterLink\n                class=\"memoji-link\"\n                tabindex=\"-1\"\n                :to=\"{name: 'portfolio'}\"\n                @mouseenter.native=\"focusPortfolioLink\"\n                @mouseleave.native=\"blurPortfolioLink\">\n                <transition\n                  :name=\"horizontalTransitionName\"\n                  mode=\"out-in\"\n                  appear>\n                  <Memoji\n                    :key=\"index\"\n                    :index=\"index\"\n                    :color=\"solarizedColor(index)\"\n                    :is-focused=\"isPortfolioLinkFocused\"/>\n                </transition>\n              </RouterLink>\n            </div>\n          </div>\n\n          <div class=\"right\">\n            <div class=\"content\">\n              Hello there! I am\n              <SiteTitle/>\n              and so nice to meet u.\n\n              <p class=\"roles\">\n                I am\n                <RouterLink\n                  class=\"role-link\"\n                  tabindex=\"0\"\n                  :to=\"{name: 'portfolio'}\"\n                  title=\"See my portfolio.\"\n                  @mouseenter.native=\"focusPortfolioLink\"\n                  @mouseleave.native=\"blurPortfolioLink\"\n                  @focus.native=\"focusPortfolioLink\"\n                  @blur.native=\"blurPortfolioLink\">\n                  <transition\n                    :name=\"verticalTransitionName\"\n                    mode=\"out-in\"\n                    appear>\n                    <Role\n                      :key=\"index\"\n                      :index=\"index\"\n                      :color=\"solarizedColor(index)\"\n                      :is-focused=\"isPortfolioLinkFocused\"/>\n                  </transition>\n                </RouterLink>\n              </p>\n\n              <p>\n                With utmost meticulousness and love for the craft,\n                <br/>\n                I\n                <transition\n                  :name=\"verticalTransitionName\"\n                  mode=\"out-in\"\n                  appear>\n                  <Work\n                    :key=\"index\"\n                    :index=\"index\"\n                    :is-focused=\"isPortfolioLinkFocused\"/>\n                </transition>\n                <br/>\n                <span\n                  class=\"secondary-colored\"\n                  title=\"Such as movies, music and memes!\">\n                  and also enjoy other things.\n                </span>\n              </p>\n            </div>\n          </div>\n\n          <Scroll\n            v-for=\"direction in ['previous', 'next']\"\n            :key=\"direction\"\n            class=\"scroll\"\n            :class=\"direction\"\n            :direction=\"direction\"\n            :color=\"solarizedColor(index)\"\n            @scroll=\"scrollTickers\"/>\n        </Grid>\n      </section>\n\n      <section\n        v-else\n        key=\"loading\"\n        class=\"centered\">\n        <Spinner color=\"red\"/>\n      </section>\n    </transition>\n\n    <footer v-show=\"areImagesLoaded\">\n      <Source color=\"cyan\"/>\n      <Kaomoji/>\n    </footer>\n  </main>\n</template>\n\n<script>\n  import Grid from '@/components/layout/grid/Grid'\n\n  import Spinner from '@/components/common/spinner/Spinner'\n\n  import Kaomoji from '@/components/home/kaomoji/Kaomoji'\n  import Memoji from '@/components/home/memoji/Memoji'\n  import Role from '@/components/home/role/Role'\n  import Scroll from '@/components/home/scroll/Scroll'\n  import SiteTitle from '@/components/home/site_title/SiteTitle'\n  import Source from '@/components/home/source/Source'\n  import Work from '@/components/home/work/Work'\n  import descriptions from '@/data/descriptions.json'\n\n  /**\n   * This page is the landing page for the portfolio. All improvements start\n   * here, and it is possible that they might not propagate to the other pages.\n   */\n  export default {\n    name: 'Home',\n    components: {\n      Grid,\n\n      Spinner,\n\n      Kaomoji,\n      Memoji,\n      Role,\n      Scroll,\n      SiteTitle,\n      Source,\n      Work\n    },\n    metaInfo: {\n      title: 'web dev & more...',\n      meta: ['description', 'og:description'].map(name => ({\n        name,\n        content: descriptions.home\n      }))\n    },\n    data () {\n      return {\n        index: 0,\n        interval: 8, // seconds\n        updateLooper: null,\n        isPortfolioLinkFocused: false,\n\n        totalImageCount: this.$roles.length,\n        loadedImageCount: 0,\n\n        transitionSuffix: ''\n      }\n    },\n    computed: {\n      /**\n       * Get whether all images required by the memoji ticker have been\n       * fetched and cached for faster rendering.\n       *\n       * @returns {boolean} whether all images have been loaded\n       */\n      areImagesLoaded () {\n        return this.loadedImageCount >= this.totalImageCount\n      },\n\n      /**\n       * Get the name of the transition to apply on the horizontal tickers.\n       * @return {string} the name of the horizontal ticker transition\n       */\n      horizontalTransitionName () {\n        return `flip-horizontal${this.transitionSuffix}`\n      },\n      /**\n       * Get the name of the transition to apply on the vertical tickers.\n       * @return {string} the name of the vertical ticker transition\n       */\n      verticalTransitionName () {\n        return `flip-vertical${this.transitionSuffix}`\n      }\n    },\n    watch: {\n      /**\n       * Determine the transition name based on whether the animation is going\n       * in the forward or backward direction.\n       * @param {string} to - the new value of the index\n       * @param {string} from - the old value of the index\n       */\n      index (to, from) {\n        if (to > from) { // Animation is moving forward\n          this.transitionSuffix = ''\n        } else { // Animation is moving backward\n          this.transitionSuffix = '-rev'\n        }\n      }\n    },\n    methods: {\n      /**\n       * Start the loop that changes memoji and role periodically.\n       */\n      startLooping () {\n        this.stopLooping()\n        this.updateLooper = setInterval(() => {\n          this.index++\n        }, this.interval * 1000)\n      },\n      /**\n       * Stop the loop that changes memoji and role periodically.\n       */\n      stopLooping () {\n        clearInterval(this.updateLooper)\n      },\n      /**\n       * Change the index based on which scrolling button was clicked.\n       * @param {number} delta - the value by which to change the tickers\n       */\n      scrollTickers (delta) {\n        this.stopLooping()\n        this.index += delta\n        this.startLooping()\n      },\n\n      /**\n       * Set the memoji, role and work tickers to their focused states and stop\n       * the ticking animation.\n       */\n      focusPortfolioLink () {\n        this.stopLooping()\n        this.isPortfolioLinkFocused = true\n      },\n      /**\n       * Set the memoji, role and work tickers to their blurred states and start\n       * the ticking animation.\n       */\n      blurPortfolioLink () {\n        this.isPortfolioLinkFocused = false\n        this.startLooping()\n      },\n\n      /**\n       * Load memoji for all roles by sourcing them into an invisible Image\n       * element.\n       */\n      preloadImages () {\n        this.$roles.forEach((role) => {\n          const image = new Image()\n          image.src = require(`@/assets/memoji/${role}.png`)\n\n          image.onload = () => {\n            this.loadedImageCount++\n          }\n        })\n      },\n\n      handleAfterEnter () {\n        if (this.areImagesLoaded) {\n          this.startLooping()\n        }\n      }\n    },\n    mounted () {\n      this.preloadImages()\n    },\n    beforeDestroy () {\n      this.stopLooping()\n    }\n  }\n</script>\n\n<style scoped lang=\"scss\" src=\"./Home.scss\"/>\n"]}]}