{"remainingRequest":"/Users/msfew/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/msfew/portfolio/src/templates/portfolio/commands/F.vue?vue&type=style&index=0&id=3d20ded5&scoped=true&lang=scss&","dependencies":[{"path":"/Users/msfew/portfolio/src/templates/portfolio/commands/F.vue","mtime":1617939276000},{"path":"/Users/msfew/portfolio/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5mIHsKICAuaWNvbiB7CiAgICAtLXN0cm9rZS13aWR0aDogNDhweDsgLy8gMjQgLyAxNiAqIDMycHgKICB9Cn0K"},{"version":3,"sources":["F.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;AACA;AACA;AACA","file":"F.vue","sourceRoot":"src/templates/portfolio/commands","sourcesContent":["<template>\n  <div class=\"f\">\n    <template v-if=\"paid\">\n      <span class=\"green-colored\">\n        <Icon\n          :path=\"icons.check\"\n          icon=\"check\"\n          is-inline/>\n        Paid respects!\n      </span>\n    </template>\n    <template v-else>\n      <span class=\"yellow-colored\">\n        <Spinner/>\n        Paying respectsâ€¦\n      </span>\n    </template>\n  </div>\n</template>\n\n<script>\n  import Icon from '@/components/common/icon/Icon'\n\n  import Spinner from '@/components/portfolio/spinner/Spinner'\n\n  import check from '@/assets/icons/check.svg'\n\n  export default {\n    name: 'F',\n    components: {\n      Icon,\n\n      Spinner\n    },\n    data () {\n      return {\n        paid: false,\n        interval: 5,\n        icons: {\n          check\n        }\n      }\n    },\n    mounted () {\n      setTimeout(() => {\n        this.paid = true\n      }, this.interval * 1000)\n    }\n  }\n</script>\n\n<style scoped lang=\"scss\">\n  .f {\n    .icon {\n      --stroke-width: 48px; // 24 / 16 * 32px\n    }\n  }\n</style>\n"]}]}