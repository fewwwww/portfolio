{"remainingRequest":"/Users/msfew/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/msfew/portfolio/src/templates/portfolio/commands/ChangeDirectory.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/msfew/portfolio/src/templates/portfolio/commands/ChangeDirectory.vue","mtime":1615276825508},{"path":"/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/msfew/portfolio/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMsIG1hcE11dGF0aW9ucyB9IGZyb20gJ3Z1ZXgnCgppbXBvcnQgYXJndW1lbnRlZCBmcm9tICdAL21peGlucy9hcmd1bWVudGVkJwoKLyoqCiAqIFRoaXMgY29tbWFuZCBzd2l0Y2hlcyB0byBhIGdpdmVuIGRpcmVjdG9yeSAnZGlybmFtZScuCiAqLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0NoYW5nZURpcmVjdG9yeScsCiAgbWl4aW5zOiBbCiAgICBhcmd1bWVudGVkCiAgXSwKICBhcmdTcGVjOiB7CiAgICBhcmdzOiBbCiAgICAgIHsKICAgICAgICBuYW1lOiAnZGlybmFtZScsCiAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgIGRlZmF1bHQ6ICd+JwogICAgICB9CiAgICBdLAogICAga3dhcmdzOiBbXQogIH0sCiAgcHJvcHM6IHsKICAgIC8qKgogICAgICogX3RoZSBhcmd1bWVudHMgcGFzc2VkIHRvIHRoZSBjb21tYW5kXwogICAgICovCiAgICBhcmd2OiB7CiAgICAgIHR5cGU6IEFycmF5CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgLyoqCiAgICAgKiBfdGhlIGRpcmVjdG9yeSB0byB3aGljaCB0aGUgY3VycmVudCBkaXJlY3Rvcnkgc2hvdWxkIGJlIGNoYW5nZWRfCiAgICAgKi8KICAgIGRpciAoKSB7CiAgICAgIHJldHVybiB0aGlzLm5vZGVMb2NhdGVkQXQodGhpcy5hcmdzLmRpcm5hbWUucmVwbGFjZSgvXC8kLywgJycpKQogICAgfSwKICAgIC8qKgogICAgICogX3doZXRoZXIgYSBmb2xkZXIgbWF0Y2hpbmcgdGhlIHBhdGggd2FzIGZvdW5kXwogICAgICovCiAgICBpc0ZvdW5kICgpIHsKICAgICAgcmV0dXJuIHRoaXMubm9kZSAmJiB0aGlzLm5vZGUuaXNGb2xkZXIoKQogICAgfSwKCiAgICAuLi5tYXBHZXR0ZXJzKCdwb3J0Zm9saW8nLCBbCiAgICAgICdub2RlTG9jYXRlZEF0JywKICAgICAgJ2Fic29sdXRlUGF0aFRvJwogICAgXSkKICB9LAogIG1ldGhvZHM6IHsKICAgIC4uLm1hcE11dGF0aW9ucygncG9ydGZvbGlvJywgWwogICAgICAnc2V0Q3VycmVudE5vZGUnCiAgICBdKQogIH0sCiAgY3JlYXRlZCAoKSB7CiAgICB0aGlzLm5vZGUgPSB0aGlzLmRpcgoKICAgIGlmICh0aGlzLmlzRm91bmQpIHsKICAgICAgdGhpcy5zZXRDdXJyZW50Tm9kZSh7CiAgICAgICAgY3VycmVudE5vZGU6IHRoaXMubm9kZQogICAgICB9KQogICAgfQogIH0KfQo="},{"version":3,"sources":["ChangeDirectory.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChangeDirectory.vue","sourceRoot":"src/templates/portfolio/commands","sourcesContent":["<template>\n  <span\n    v-if=\"isFound\"\n    class=\"cd\">\n    &nbsp;\n  </span>\n\n  <div\n    v-else\n    class=\"cd\">\n    <strong>{{ args.dirname }}</strong> is not a valid directory.\n  </div>\n</template>\n\n<script>\n  import { mapGetters, mapMutations } from 'vuex'\n\n  import argumented from '@/mixins/argumented'\n\n  /**\n   * This command switches to a given directory 'dirname'.\n   */\n  export default {\n    name: 'ChangeDirectory',\n    mixins: [\n      argumented\n    ],\n    argSpec: {\n      args: [\n        {\n          name: 'dirname',\n          type: String,\n          default: '~'\n        }\n      ],\n      kwargs: []\n    },\n    props: {\n      /**\n       * _the arguments passed to the command_\n       */\n      argv: {\n        type: Array\n      }\n    },\n    computed: {\n      /**\n       * _the directory to which the current directory should be changed_\n       */\n      dir () {\n        return this.nodeLocatedAt(this.args.dirname.replace(/\\/$/, ''))\n      },\n      /**\n       * _whether a folder matching the path was found_\n       */\n      isFound () {\n        return this.node && this.node.isFolder()\n      },\n\n      ...mapGetters('portfolio', [\n        'nodeLocatedAt',\n        'absolutePathTo'\n      ])\n    },\n    methods: {\n      ...mapMutations('portfolio', [\n        'setCurrentNode'\n      ])\n    },\n    created () {\n      this.node = this.dir\n\n      if (this.isFound) {\n        this.setCurrentNode({\n          currentNode: this.node\n        })\n      }\n    }\n  }\n</script>\n"]}]}